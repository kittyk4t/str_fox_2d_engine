{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1","program":"/Users/katianawieser/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","nanorand","--edition=2018","/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"chacha\"","--cfg","feature=\"default\"","--cfg","feature=\"getrandom\"","--cfg","feature=\"pcg64\"","--cfg","feature=\"std\"","--cfg","feature=\"tls\"","--cfg","feature=\"wyrand\"","-C","metadata=7bb0a5099bc33a69","-C","extra-filename=-7bb0a5099bc33a69","--out-dir","/Users/katianawieser/CS181G/str_fox_2d_engine/game_1/target/rls/debug/deps","-L","dependency=/Users/katianawieser/CS181G/str_fox_2d_engine/game_1/target/rls/debug/deps","--extern","getrandom=/Users/katianawieser/CS181G/str_fox_2d_engine/game_1/target/rls/debug/deps/libgetrandom-05ab8e0e9f05670e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/katianawieser/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/katianawieser/CS181G/str_fox_2d_engine/game_1/target/rls/debug/deps/libnanorand-7bb0a5099bc33a69.rmeta"},"prelude":{"crate_id":{"name":"nanorand","disambiguator":[10556396530266660266,0]},"crate_root":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src","external_crates":[{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","num":18,"id":{"name":"getrandom","disambiguator":[1071574499237123241,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","num":20,"id":{"name":"libc","disambiguator":[8042991853675623630,0]}}],"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":0,"byte_end":5439,"line_start":1,"line_end":100,"column_start":1,"column_end":13}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5083,"byte_end":5084,"line_start":85,"line_end":85,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5100,"byte_end":5101,"line_start":86,"line_end":86,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"WyRand, Rng","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5140,"byte_end":5147,"line_start":88,"line_end":88,"column_start":14,"column_end":21},"alias_span":null,"name":"tls_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20310,"byte_end":20316,"line_start":2,"line_end":2,"column_start":18,"column_end":24},"alias_span":null,"name":"ChaCha","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20318,"byte_end":20326,"line_start":2,"line_end":2,"column_start":26,"column_end":34},"alias_span":null,"name":"ChaCha12","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20328,"byte_end":20336,"line_start":2,"line_end":2,"column_start":36,"column_end":44},"alias_span":null,"name":"ChaCha20","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20338,"byte_end":20345,"line_start":2,"line_end":2,"column_start":46,"column_end":53},"alias_span":null,"name":"ChaCha8","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20389,"byte_end":20394,"line_start":4,"line_end":4,"column_start":16,"column_end":21},"alias_span":null,"name":"Pcg64","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20439,"byte_end":20445,"line_start":6,"line_end":6,"column_start":17,"column_end":23},"alias_span":null,"name":"WyRand","value":"","parent":{"krate":0,"index":59}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":0,"byte_end":5439,"line_start":1,"line_end":100,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":59},{"krate":0,"index":244}],"decl_id":null,"docs":" A library meant for fast, random number generation with quick compile time, and minimal dependencies.","sig":null,"attributes":[{"value":"forbid(missing_docs)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":43,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"warn(clippy :: perf, clippy :: complexity, clippy :: style, clippy ::\n       correctness, clippy :: missing_const_for_fn)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":68,"byte_end":183,"line_start":3,"line_end":9,"column_start":1,"column_end":3}},{"value":"/ A library meant for fast, random number generation with quick compile time, and minimal dependencies.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":185,"byte_end":290,"line_start":11,"line_end":11,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":291,"byte_end":294,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":295,"byte_end":309,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ## Generating a number with an initialized RNG","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":310,"byte_end":360,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ ```rust","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":361,"byte_end":372,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":373,"byte_end":405,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":406,"byte_end":409,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":410,"byte_end":442,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":443,"byte_end":500,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":501,"byte_end":508,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ## Generating a number with a thread-local RNG","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":509,"byte_end":559,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ ```rust","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":560,"byte_end":571,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use nanorand::Rng;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":572,"byte_end":594,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":595,"byte_end":598,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut rng = nanorand::tls_rng();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":599,"byte_end":637,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":638,"byte_end":695,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":696,"byte_end":703,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ## Generating a number in a range","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":704,"byte_end":741,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ ```rust","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":742,"byte_end":753,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":754,"byte_end":786,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":787,"byte_end":790,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":791,"byte_end":823,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ println!(\"Random number between 1 and 100: {}\", rng.generate_range(1_u64..=100));","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":824,"byte_end":909,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ println!(\"Random number between -100 and 50: {}\", rng.generate_range(-100_i64..=50));","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":910,"byte_end":999,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1000,"byte_end":1007,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Shuffling a Vec","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1008,"byte_end":1030,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ ```rust","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1031,"byte_end":1042,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1043,"byte_end":1075,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1076,"byte_end":1079,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1080,"byte_end":1112,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ let mut items = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1113,"byte_end":1169,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/ rng.shuffle(&mut items);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1170,"byte_end":1198,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1199,"byte_end":1206,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1207,"byte_end":1210,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Why should I use this over...","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1211,"byte_end":1247,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1248,"byte_end":1251,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ * `rand` - The standard rand crate is a complex beast. It contains unsafe code in the core implementations, and while it has much more options than we do, that's kind of the point. We're straight to the point, while rand is everything and the kitchen sink.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1252,"byte_end":1512,"line_start":47,"line_end":47,"column_start":1,"column_end":261}},{"value":"/ * `fastrand`, `oorandom`, `random-fast-rng`, or `randomize` - These are all minimal, zero-dep implementations of the PCG family of RNGs (Pcg32 and Pcg64). While these are decent, they are _much_ slower than wyrand (which beats the speed of these Pcg32 implementations while providing 64 random bits), and do not provide CSPRNGs.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1513,"byte_end":1845,"line_start":48,"line_end":48,"column_start":1,"column_end":333}},{"value":"/ * `getrandom` - The getrandom crate just provides OS entropy sources. It is not meant for random number generation. In fact, we provide it as an optional entropy source.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":1846,"byte_end":2019,"line_start":49,"line_end":49,"column_start":1,"column_end":174}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2020,"byte_end":2023,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## RNG Implementations","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2024,"byte_end":2050,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ **RNG**|**nanorand type**|**Output Size**|**Cryptographically Secure**|**Speed**<sup>1</sup>|**Notes**|**Original Implementation**","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2055,"byte_end":2189,"line_start":53,"line_end":53,"column_start":1,"column_end":135}},{"value":"/ :-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2190,"byte_end":2249,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"/ wyrand|[`nanorand::WyRand`](rand/wyrand/struct.WyRand.html), [`nanorand::tls::TlsWyRand`](tls/fn.tls_rng.html)|64 bits (`u64`)|🚫|16.4 GB/s||[https://github.com/lemire/testingRNG/blob/master/source/wyrand.h](https://github.com/lemire/testingRNG/blob/master/source/wyrand.h)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2250,"byte_end":2529,"line_start":55,"line_end":55,"column_start":1,"column_end":277}},{"value":"/ Pcg64|[`nanorand::Pcg64`](rand/pcg64/struct.Pcg64.html)|64 bits (`u64`)|🚫|1.6 GB/s||[https://github.com/rkern/pcg64](https://github.com/rkern/pcg64)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2530,"byte_end":2685,"line_start":56,"line_end":56,"column_start":1,"column_end":153}},{"value":"/ ChaCha|[`nanorand::ChaCha`](rand/chacha/struct.ChaCha.html)|512 bits (`[u32; 16]`)|✅|204 MB/s (ChaCha8), 79 MB/s (ChaCha20)|Only works in Rust 1.47 or above|[https://cr.yp.to/chacha.html](https://cr.yp.to/chacha.html)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2686,"byte_end":2909,"line_start":57,"line_end":57,"column_start":1,"column_end":222}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2910,"byte_end":2913,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <sup>1. Speed benchmarked on an M1 Macbook Air</sup>","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2914,"byte_end":2970,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2971,"byte_end":2974,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Entropy Sources","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2975,"byte_end":2997,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ _Listed in order of priority_","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":2998,"byte_end":3031,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3032,"byte_end":3035,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * If the `getrandom` feature is enabled, then [`getrandom::getrandom`](https://docs.rs/getrandom/*/getrandom/fn.getrandom.html) will be called.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3036,"byte_end":3183,"line_start":64,"line_end":64,"column_start":1,"column_end":148}},{"value":"/ * If the `rdseed` feature is enabled, and is running on an x86(-64) system with the [RDSEED](https://en.wikipedia.org/wiki/RDRAND) instruction, then","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3184,"byte_end":3336,"line_start":65,"line_end":65,"column_start":1,"column_end":153}},{"value":"/   we will attempt to source as much entropy as possible via our [`rdseed_entropy`](entropy::rdseed_entropy) function","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3337,"byte_end":3457,"line_start":66,"line_end":66,"column_start":1,"column_end":121}},{"value":"/ * Linux and Android will attempt to use the [`getrandom`](https://man7.org/linux/man-pages/man2/getrandom.2.html) syscall.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3458,"byte_end":3584,"line_start":67,"line_end":67,"column_start":1,"column_end":127}},{"value":"/ * macOS and iOS (Darwin-based systems) will use Security.framework's [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3585,"byte_end":3760,"line_start":68,"line_end":68,"column_start":1,"column_end":176}},{"value":"/ * Windows","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3761,"byte_end":3774,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/   * If we're targeting UWP, then the [`BCryptGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom) is used with system-preferred RNG (`BCRYPT_USE_SYSTEM_PREFERRED_RNG`).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3775,"byte_end":3991,"line_start":70,"line_end":70,"column_start":1,"column_end":217}},{"value":"/   * Otherwise, we'll use [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":3992,"byte_end":4124,"line_start":71,"line_end":71,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4125,"byte_end":4128,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4129,"byte_end":4149,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4150,"byte_end":4153,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * `std` (default) - Enables Rust `std` lib features, such as seeding from OS entropy sources.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4154,"byte_end":4251,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ * `tls` (default) - Enables a thread-local [`WyRand`](rand/wyrand/struct.WyRand.html) RNG (see below). Requires `tls` to be enabled.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4252,"byte_end":4388,"line_start":76,"line_end":76,"column_start":1,"column_end":137}},{"value":"/ * `wyrand` (default) - Enable the [`WyRand`](rand/wyrand/struct.WyRand.html) RNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4389,"byte_end":4474,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/ * `pcg64` (default) - Enable the [`Pcg64`](rand/pcg64/struct.Pcg64.html)  RNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4475,"byte_end":4557,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ * `chacha` - Enable the [`ChaCha`](rand/chacha/struct.ChaCha.html) RNG. Requires Rust 1.47 or later.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4558,"byte_end":4662,"line_start":79,"line_end":79,"column_start":1,"column_end":105}},{"value":"/ * `rdseed` - On x86 and x86-64 platforms, the `rdseed` intrinsic will be used when OS entropy isn't available.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4663,"byte_end":4777,"line_start":80,"line_end":80,"column_start":1,"column_end":115}},{"value":"/ * `zeroize` - Implement the [Zeroize](https://crates.io/crates/zeroize) trait for all RNGs.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4778,"byte_end":4873,"line_start":81,"line_end":81,"column_start":1,"column_end":96}},{"value":"/ * `getrandom` - Use the [`getrandom`](https://crates.io/crates/getrandom) crate as an entropy source.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4874,"byte_end":4979,"line_start":82,"line_end":82,"column_start":1,"column_end":106}},{"value":"/ Works on most systems, optional due to the fact that it brings in more dependencies.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":4980,"byte_end":5068,"line_start":83,"line_end":83,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypto","qualname":"::crypto","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/mod.rs","parent":null,"children":[{"krate":0,"index":9}],"decl_id":null,"docs":" Implementation of cryptography, for CSPRNGs.\n","sig":null,"attributes":[{"value":"/ Implementation of cryptography, for CSPRNGs.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5150,"byte_end":5198,"line_start":90,"line_end":90,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha","qualname":"::crypto::chacha","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":19},{"krate":0,"index":24}],"decl_id":null,"docs":" Implementation of the ChaCha cryptographic primitives.  \n More details can be seen at https://en.wikipedia.org/wiki/Salsa20\n","sig":null,"attributes":[{"value":"/ Implementation of the ChaCha cryptographic primitives.  ","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/mod.rs","byte_start":5441,"byte_end":5501,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/ More details can be seen at https://en.wikipedia.org/wiki/Salsa20","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/mod.rs","byte_start":5502,"byte_end":5571,"line_start":2,"line_end":2,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":6406,"byte_end":6418,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"chacha_block","qualname":"::crypto::chacha::chacha_block","value":"pub fn chacha_block<const ROUNDS: u8>([u32; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Do one ChaCha round on the input data.\n","sig":null,"attributes":[{"value":"/ Do one ChaCha round on the input data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":6356,"byte_end":6398,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":7173,"byte_end":7184,"line_start":51,"line_end":51,"column_start":14,"column_end":25},"name":"chacha_init","qualname":"::crypto::chacha::chacha_init","value":"pub const fn chacha_init([u8; ], [u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Initialize the ChaCha internal state, with a 256-bit key and 64-bit nonce.\n","sig":null,"attributes":[{"value":"/ Initialize the ChaCha internal state, with a 256-bit key and 64-bit nonce.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":7081,"byte_end":7159,"line_start":50,"line_end":50,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":7979,"byte_end":8003,"line_start":78,"line_end":78,"column_start":8,"column_end":32},"name":"chacha_increment_counter","qualname":"::crypto::chacha::chacha_increment_counter","value":"pub fn chacha_increment_counter(&mut [u32; ]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Increment the 64-bit counter of the internal ChaCha20 state by 1.\n Returns `false` if it overflows, `true` otherwise.\n","sig":null,"attributes":[{"value":"/ Increment the 64-bit counter of the internal ChaCha20 state by 1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":7847,"byte_end":7916,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/ Returns `false` if it overflows, `true` otherwise.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/chacha.rs","byte_start":7917,"byte_end":7971,"line_start":77,"line_end":77,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"entropy","qualname":"::entropy","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":" Sources for obtaining entropy.\n","sig":null,"attributes":[{"value":"/ Sources for obtaining entropy.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5215,"byte_end":5249,"line_start":92,"line_end":92,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":12172,"byte_end":12178,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"system","qualname":"::entropy::system","value":"pub fn system(&mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Pull in system entropy using the [`getrandom`](https://crates.io/crates/getrandom) crate.\n Uses backup entropy (rdseed and system time) if it fails.\n","sig":null,"attributes":[{"value":"cfg(feature = \"getrandom\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":11979,"byte_end":12008,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ Pull in system entropy using the [`getrandom`](https://crates.io/crates/getrandom) crate.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":12009,"byte_end":12102,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ Uses backup entropy (rdseed and system time) if it fails.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":12103,"byte_end":12164,"line_start":34,"line_end":34,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14071,"byte_end":14077,"line_start":107,"line_end":107,"column_start":8,"column_end":14},"name":"rdseed","qualname":"::entropy::rdseed","value":"pub fn rdseed(&mut [u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A wrapper function for non-x86(64) platforms that do not have rdseed.\n","sig":null,"attributes":[{"value":"/ A wrapper function for non-x86(64) platforms that do not have rdseed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":13894,"byte_end":13967,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"cfg(any(not(feature = \"rdseed\"),\n          not(any(target_arch = \"x86\", target_arch = \"x86_64\"))))","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":13968,"byte_end":14063,"line_start":103,"line_end":106,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14406,"byte_end":14412,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"backup","qualname":"::entropy::backup","value":"pub fn backup(&mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" A backup entropy source, trying rdseed first,\n and if it fails or does not complete, combining it with or\n using system time-based entropy generation.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14123,"byte_end":14146,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"/ A backup entropy source, trying rdseed first,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14147,"byte_end":14196,"line_start":112,"line_end":112,"column_start":1,"column_end":50}},{"value":"/ and if it fails or does not complete, combining it with or","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14197,"byte_end":14259,"line_start":113,"line_end":113,"column_start":1,"column_end":63}},{"value":"/ using system time-based entropy generation.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14260,"byte_end":14307,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14308,"byte_end":14311,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14312,"byte_end":14324,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14325,"byte_end":14328,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This function panics if sufficient entropy could not be obtained.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/entropy/mod.rs","byte_start":14329,"byte_end":14398,"line_start":118,"line_end":118,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":345},{"krate":0,"index":350},{"krate":0,"index":355},{"krate":0,"index":360}],"decl_id":null,"docs":" Traits for generating types from an RNG.\n","sig":null,"attributes":[{"value":"/ Traits for generating types from an RNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5267,"byte_end":5311,"line_start":94,"line_end":94,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17262,"byte_end":17271,"line_start":78,"line_end":78,"column_start":11,"column_end":20},"name":"RandomGen","qualname":"::gen::RandomGen","value":"RandomGen<R: Rng>","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" A trait used for generating a random object with an RNG,\n","sig":null,"attributes":[{"value":"/ A trait used for generating a random object with an RNG,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17191,"byte_end":17251,"line_start":77,"line_end":77,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17375,"byte_end":17381,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"random","qualname":"::gen::RandomGen::random","value":"pub fn random(&mut R) -> Self","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Return a random instance of the implementing type, from the specified RNG instance.\n","sig":null,"attributes":[{"value":"/ Return a random instance of the implementing type, from the specified RNG instance.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17283,"byte_end":17370,"line_start":79,"line_end":79,"column_start":2,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17492,"byte_end":17503,"line_start":84,"line_end":84,"column_start":11,"column_end":22},"name":"RandomRange","qualname":"::gen::RandomRange","value":"RandomRange<R: Rng>: RandomGen<R>","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" A trait used for generating a random number within a range, with an RNG,\n","sig":null,"attributes":[{"value":"/ A trait used for generating a random number within a range, with an RNG,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17405,"byte_end":17481,"line_start":83,"line_end":83,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17619,"byte_end":17631,"line_start":86,"line_end":86,"column_start":5,"column_end":17},"name":"random_range","qualname":"::gen::RandomRange::random_range","value":"pub fn random_range<B: RangeBounds<Self>>(&mut R, B) -> Self","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Return a ranged number of the implementing type, from the specified RNG instance.\n","sig":null,"attributes":[{"value":"/ Return a ranged number of the implementing type, from the specified RNG instance.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17529,"byte_end":17614,"line_start":85,"line_end":85,"column_start":2,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rand","qualname":"::rand","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":125},{"krate":0,"index":165},{"krate":0,"index":227}],"decl_id":null,"docs":" RNG algorithms.\n","sig":null,"attributes":[{"value":"/ RNG algorithms.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5325,"byte_end":5344,"line_start":96,"line_end":96,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wyrand","qualname":"::rand::wyrand","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":121},{"krate":0,"index":123}],"decl_id":null,"docs":" Implementation of the wyrand PRNG algorithm.\n More details can be seen at <https://github.com/wangyi-fudan/wyhash>\n","sig":null,"attributes":[{"value":"/ Implementation of the wyrand PRNG algorithm.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20519,"byte_end":20567,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ More details can be seen at <https://github.com/wangyi-fudan/wyhash>","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20568,"byte_end":20640,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"cfg(feature = \"wyrand\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20641,"byte_end":20667,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22934,"byte_end":22940,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"WyRand","qualname":"::rand::wyrand::WyRand","value":"WyRand {  }","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" An instance of the WyRand random number generator.\n Seeded from the system entropy generator when available.\n **This generator is _NOT_ cryptographically secure.**\n #[repr(transparent)]\n","sig":null,"attributes":[{"value":"/ An instance of the WyRand random number generator.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22605,"byte_end":22659,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/ Seeded from the system entropy generator when available.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22660,"byte_end":22720,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/ **This generator is _NOT_ cryptographically secure.**","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22721,"byte_end":22778,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ #[repr(transparent)]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22779,"byte_end":22803,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"repr(transparent)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22902,"byte_end":22922,"line_start":14,"line_end":14,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23085,"byte_end":23088,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"new","qualname":"<WyRand>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WyRand`] instance, seeding from the system's default source of entropy.\n","sig":null,"attributes":[{"value":"/ Create a new [`WyRand`] instance, seeding from the system's default source of entropy.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22973,"byte_end":23063,"line_start":20,"line_end":20,"column_start":2,"column_end":92}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23065,"byte_end":23076,"line_start":21,"line_end":21,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23212,"byte_end":23220,"line_start":28,"line_end":28,"column_start":15,"column_end":23},"name":"new_seed","qualname":"<WyRand>::new_seed","value":"pub const fn new_seed(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WyRand`] instance, using a provided seed.\n","sig":null,"attributes":[{"value":"/ Create a new [`WyRand`] instance, using a provided seed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23124,"byte_end":23184,"line_start":26,"line_end":26,"column_start":2,"column_end":62}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23186,"byte_end":23197,"line_start":27,"line_end":27,"column_start":2,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pcg64","qualname":"::rand::pcg64","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":161},{"krate":0,"index":163}],"decl_id":null,"docs":" Implementation of the Pcg64 PRNG algorithm.\n More details can be seen at <https://www.pcg-random.org/index.html>\n","sig":null,"attributes":[{"value":"/ Implementation of the Pcg64 PRNG algorithm.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20685,"byte_end":20732,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ More details can be seen at <https://www.pcg-random.org/index.html>","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20733,"byte_end":20804,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"pcg64\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20805,"byte_end":20830,"line_start":18,"line_end":18,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25236,"byte_end":25241,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Pcg64","qualname":"::rand::pcg64::Pcg64","value":"Pcg64 {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" An instance of the Pcg64 random number generator.\n Seeded from the system entropy generator when available.\n **This generator is _NOT_ cryptographically secure.**\n","sig":null,"attributes":[{"value":"/ An instance of the Pcg64 random number generator.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":24943,"byte_end":24996,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ Seeded from the system entropy generator when available.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":24997,"byte_end":25057,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ **This generator is _NOT_ cryptographically secure.**","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25058,"byte_end":25115,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"repr(C)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25214,"byte_end":25224,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25436,"byte_end":25439,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"new","qualname":"<Pcg64>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Pcg64`] instance, seeding from the system's default source of entropy.\n","sig":null,"attributes":[{"value":"/ Create a new [`Pcg64`] instance, seeding from the system's default source of entropy.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25300,"byte_end":25389,"line_start":23,"line_end":23,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25391,"byte_end":25414,"line_start":24,"line_end":24,"column_start":2,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25416,"byte_end":25427,"line_start":25,"line_end":25,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25736,"byte_end":25744,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"new_seed","qualname":"<Pcg64>::new_seed","value":"pub const fn new_seed(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Pcg64`] instance, using a provided seed.\n","sig":null,"attributes":[{"value":"/ Create a new [`Pcg64`] instance, using a provided seed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25649,"byte_end":25708,"line_start":36,"line_end":36,"column_start":2,"column_end":61}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25710,"byte_end":25721,"line_start":37,"line_end":37,"column_start":2,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha","qualname":"::rand::chacha","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":221},{"krate":0,"index":224}],"decl_id":null,"docs":" Implementation of the ChaCha CSPRNG algorithm.\n More details can be seen at <https://en.wikipedia.org/wiki/Salsa20>\n","sig":null,"attributes":[{"value":"/ Implementation of the ChaCha CSPRNG algorithm.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20847,"byte_end":20897,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ More details can be seen at <https://en.wikipedia.org/wiki/Salsa20>","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20898,"byte_end":20969,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"chacha\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20970,"byte_end":20996,"line_start":23,"line_end":23,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27452,"byte_end":27459,"line_start":7,"line_end":7,"column_start":10,"column_end":17},"name":"ChaCha8","qualname":"::rand::chacha::ChaCha8","value":"ChaCha<>","parent":null,"children":[],"decl_id":null,"docs":" The ChaCha CSPRNG, with 8 rounds.\n","sig":null,"attributes":[{"value":"/ The ChaCha CSPRNG, with 8 rounds.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27405,"byte_end":27442,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":185},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27522,"byte_end":27530,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"ChaCha12","qualname":"::rand::chacha::ChaCha12","value":"ChaCha<>","parent":null,"children":[],"decl_id":null,"docs":" The ChaCha CSPRNG, with 12 rounds.\n","sig":null,"attributes":[{"value":"/ The ChaCha CSPRNG, with 12 rounds.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27474,"byte_end":27512,"line_start":9,"line_end":9,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27594,"byte_end":27602,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ChaCha20","qualname":"::rand::chacha::ChaCha20","value":"ChaCha<>","parent":null,"children":[],"decl_id":null,"docs":" The ChaCha CSPRNG, with 20 rounds.\n","sig":null,"attributes":[{"value":"/ The ChaCha CSPRNG, with 20 rounds.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27546,"byte_end":27584,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27922,"byte_end":27928,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"ChaCha","qualname":"::rand::chacha::ChaCha","value":"ChaCha {  }","parent":null,"children":[{"krate":0,"index":191}],"decl_id":null,"docs":" An instance of the ChaCha random number generator.\n Seeded from the system entropy generator when available.\n **This generator _is theoretically_ cryptographically secure.**\n","sig":null,"attributes":[{"value":"/ An instance of the ChaCha random number generator.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27618,"byte_end":27672,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ Seeded from the system entropy generator when available.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27673,"byte_end":27733,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ **This generator _is theoretically_ cryptographically secure.**","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27734,"byte_end":27801,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"repr(C)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27900,"byte_end":27910,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28124,"byte_end":28127,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"new","qualname":"<ChaCha<ROUNDS>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`ChaCha`] instance, seeding from the system's default source of entropy.\n","sig":null,"attributes":[{"value":"/ Create a new [`ChaCha`] instance, seeding from the system's default source of entropy.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28012,"byte_end":28102,"line_start":26,"line_end":26,"column_start":2,"column_end":92}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28104,"byte_end":28115,"line_start":27,"line_end":27,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28475,"byte_end":28482,"line_start":39,"line_end":39,"column_start":15,"column_end":22},"name":"new_key","qualname":"<ChaCha<ROUNDS>>::new_key","value":"pub const fn new_key([u8; ], [u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`ChaCha`] instance, using the provided key and nonce.\n","sig":null,"attributes":[{"value":"/ Create a new [`ChaCha`] instance, using the provided key and nonce.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28376,"byte_end":28447,"line_start":37,"line_end":37,"column_start":2,"column_end":73}},{"value":"must_use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28449,"byte_end":28460,"line_start":38,"line_end":38,"column_start":2,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":227},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21079,"byte_end":21082,"line_start":27,"line_end":27,"column_start":11,"column_end":14},"name":"Rng","qualname":"::rand::Rng","value":"Rng: Clone","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243}],"decl_id":null,"docs":" A trait that represents a random number generator.\n","sig":null,"attributes":[{"value":"/ A trait that represents a random number generator.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21014,"byte_end":21068,"line_start":26,"line_end":26,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21140,"byte_end":21146,"line_start":29,"line_end":29,"column_start":7,"column_end":13},"name":"Output","qualname":"::rand::Rng::Output","value":"type Output: AsRef<[u8]>;","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" The byte output that this RNG emits.\n","sig":null,"attributes":[{"value":"/ The byte output that this RNG emits.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21093,"byte_end":21133,"line_start":28,"line_end":28,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21242,"byte_end":21246,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"rand","qualname":"::rand::Rng::rand","value":"pub fn rand(&mut Self) -> Self::Output","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Generates a random sequence of bytes, seeding from the internal state.\n","sig":null,"attributes":[{"value":"/ Generates a random sequence of bytes, seeding from the internal state.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21163,"byte_end":21237,"line_start":31,"line_end":31,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21342,"byte_end":21356,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"rand_with_seed","qualname":"::rand::Rng::rand_with_seed","value":"pub fn rand_with_seed(&[u8]) -> Self::Output","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Generates a random sequence of bytes, with a custom seed.\n","sig":null,"attributes":[{"value":"/ Generates a random sequence of bytes, with a custom seed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21276,"byte_end":21337,"line_start":33,"line_end":33,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21471,"byte_end":21479,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"generate","qualname":"::rand::Rng::generate","value":"pub fn generate<R>(&mut Self) -> R where R: RandomGen<Self>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Generates a random of the specified type, seeding from the internal state.\n","sig":null,"attributes":[{"value":"/ Generates a random of the specified type, seeding from the internal state.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21388,"byte_end":21466,"line_start":35,"line_end":35,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21600,"byte_end":21604,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"fill","qualname":"::rand::Rng::fill","value":"pub fn fill<R, A>(&mut Self, A) where R: RandomGen<Self>, A: AsMut<[R]>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Fill an array with the specified type.\n","sig":null,"attributes":[{"value":"/ Fill an array with the specified type.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21553,"byte_end":21595,"line_start":42,"line_end":42,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21869,"byte_end":21883,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"name":"generate_range","qualname":"::rand::Rng::generate_range","value":"pub fn generate_range<R, B>(&mut Self, B) -> R where R: RandomRange<Self>,\nB: RangeBounds<R>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Generates a random of the specified type, seeding from the internal state.\n","sig":null,"attributes":[{"value":"/ Generates a random of the specified type, seeding from the internal state.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21786,"byte_end":21864,"line_start":51,"line_end":51,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":22046,"byte_end":22053,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"shuffle","qualname":"::rand::Rng::shuffle","value":"pub fn shuffle<I, S>(&mut Self, S) where S: AsMut<[I]>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Shuffle a slice, using the RNG.\n","sig":null,"attributes":[{"value":"/ Shuffle a slice, using the RNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":22006,"byte_end":22041,"line_start":59,"line_end":59,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":22349,"byte_end":22355,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"reseed","qualname":"::rand::Rng::reseed","value":"pub fn reseed(&mut Self, &[u8])","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Reseeds the RNG using a custom seed.\n","sig":null,"attributes":[{"value":"/ Reseeds the RNG using a custom seed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":22304,"byte_end":22344,"line_start":71,"line_end":71,"column_start":2,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tls","qualname":"::tls","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":259},{"krate":0,"index":265}],"decl_id":null,"docs":" Provides a thread-local [`WyRand`] RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tls\")","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5359,"byte_end":5382,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/ Provides a thread-local [`WyRand`] RNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5383,"byte_end":5426,"line_start":99,"line_end":99,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30531,"byte_end":30540,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TlsWyRand","qualname":"::tls::TlsWyRand","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31330,"byte_end":31337,"line_start":44,"line_end":44,"column_start":8,"column_end":15},"name":"tls_rng","qualname":"::tls::tls_rng","value":"pub fn tls_rng() -> TlsWyRand","parent":null,"children":[],"decl_id":null,"docs":" Fetch a thread-local [`WyRand`]\n ```rust\n use nanorand::Rng;","sig":null,"attributes":[{"value":"/ Fetch a thread-local [`WyRand`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30856,"byte_end":30891,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ ```rust","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30892,"byte_end":30903,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ use nanorand::Rng;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30904,"byte_end":30926,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30927,"byte_end":30930,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut rng = nanorand::tls_rng();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30931,"byte_end":30969,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30970,"byte_end":31027,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31028,"byte_end":31035,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ This cannot be passed to another thread, as something like this will fail to compile:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31036,"byte_end":31125,"line_start":35,"line_end":35,"column_start":1,"column_end":90}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31126,"byte_end":31145,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/ use nanorand::Rng;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31146,"byte_end":31168,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31169,"byte_end":31172,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let mut rng = nanorand::tls_rng();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31173,"byte_end":31211,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31212,"byte_end":31244,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/     println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31245,"byte_end":31306,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ });","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31307,"byte_end":31314,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":31315,"byte_end":31322,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]}],"impls":[{"id":25,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22963,"byte_end":22969,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23281,"byte_end":23287,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23591,"byte_end":23597,"line_start":44,"line_end":44,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":24465,"byte_end":24471,"line_start":71,"line_end":71,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":24551,"byte_end":24557,"line_start":77,"line_end":77,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25291,"byte_end":25296,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":26240,"byte_end":26245,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":26574,"byte_end":26579,"line_start":78,"line_end":78,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":27047,"byte_end":27052,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":27178,"byte_end":27183,"line_start":108,"line_end":108,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27994,"byte_end":28000,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28629,"byte_end":28635,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28938,"byte_end":28944,"line_start":56,"line_end":56,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":30090,"byte_end":30096,"line_start":95,"line_end":95,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":30204,"byte_end":30210,"line_start":101,"line_end":101,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30577,"byte_end":30586,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5207,"byte_end":5213,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/crypto/mod.rs","byte_start":5580,"byte_end":5586,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5258,"byte_end":5265,"line_start":93,"line_end":93,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5320,"byte_end":5323,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":30}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5353,"byte_end":5357,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20676,"byte_end":20682,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":20839,"byte_end":20844,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21005,"byte_end":21011,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/lib.rs","byte_start":5435,"byte_end":5438,"line_start":100,"line_end":100,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":244}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/gen.rs","byte_start":17513,"byte_end":17522,"line_start":84,"line_end":84,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":43},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":22963,"byte_end":22969,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23281,"byte_end":23287,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":23591,"byte_end":23597,"line_start":44,"line_end":44,"column_start":14,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":103},"to":{"krate":0,"index":227}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":24465,"byte_end":24471,"line_start":71,"line_end":71,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/wyrand.rs","byte_start":24551,"byte_end":24557,"line_start":77,"line_end":77,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":25291,"byte_end":25296,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":26240,"byte_end":26245,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":26574,"byte_end":26579,"line_start":78,"line_end":78,"column_start":14,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":227}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":27047,"byte_end":27052,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/pcg64.rs","byte_start":27178,"byte_end":27183,"line_start":108,"line_end":108,"column_start":18,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":27994,"byte_end":28000,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28629,"byte_end":28635,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":28938,"byte_end":28944,"line_start":56,"line_end":56,"column_start":32,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":189},"to":{"krate":0,"index":227}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":30090,"byte_end":30096,"line_start":95,"line_end":95,"column_start":34,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/chacha.rs","byte_start":30204,"byte_end":30210,"line_start":101,"line_end":101,"column_start":36,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/rand/mod.rs","byte_start":21084,"byte_end":21089,"line_start":27,"line_end":27,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":227}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/nanorand-0.6.1/src/tls.rs","byte_start":30577,"byte_end":30586,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":227}}]}