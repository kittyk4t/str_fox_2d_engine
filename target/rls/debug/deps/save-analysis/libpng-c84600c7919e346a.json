{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3","program":"/Users/katianawieser/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","png","--edition=2018","/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=c84600c7919e346a","-C","extra-filename=-c84600c7919e346a","--out-dir","/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps","-L","dependency=/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps","--extern","bitflags=/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps/libbitflags-c858810ac1401bef.rmeta","--extern","crc32fast=/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps/libcrc32fast-1a37380ff52c0ec3.rmeta","--extern","deflate=/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps/libdeflate-dde6524324623837.rmeta","--extern","miniz_oxide=/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps/libminiz_oxide-867dfde3583df11b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/katianawieser/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/katianawieser/CS181G/str_fox_2d_engine/target/rls/debug/deps/libpng-c84600c7919e346a.rmeta"},"prelude":{"crate_id":{"name":"png","disambiguator":[9618174881875028387,0]},"crate_root":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src","external_crates":[{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[9383773114405082083,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","num":19,"id":{"name":"crc32fast","disambiguator":[2214330544875115041,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","num":21,"id":{"name":"miniz_oxide","disambiguator":[3865230037714934861,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","num":22,"id":{"name":"adler","disambiguator":[16830097361978230408,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","num":23,"id":{"name":"deflate","disambiguator":[9015400459948399469,0]}},{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","num":24,"id":{"name":"adler32","disambiguator":[17135181140360493330,0]}}],"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":0,"byte_end":2981,"line_start":1,"line_end":82,"column_start":1,"column_end":3}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2775,"byte_end":2776,"line_start":78,"line_end":78,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"ScaledFloat, SourceChromaticities, SrgbRenderingIntent","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1521},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2792,"byte_end":2799,"line_start":79,"line_end":79,"column_start":15,"column_end":22},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2801,"byte_end":2808,"line_start":79,"line_end":79,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1559},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2810,"byte_end":2823,"line_start":79,"line_end":79,"column_start":33,"column_end":46},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1674},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2825,"byte_end":2831,"line_start":79,"line_end":79,"column_start":48,"column_end":54},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1659},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2833,"byte_end":2843,"line_start":79,"line_end":79,"column_start":56,"column_end":66},"alias_span":null,"name":"OutputInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2845,"byte_end":2851,"line_start":79,"line_end":79,"column_start":68,"column_end":74},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2853,"byte_end":2869,"line_start":79,"line_end":79,"column_start":76,"column_end":92},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2886,"byte_end":2893,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1749},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2895,"byte_end":2908,"line_start":80,"line_end":80,"column_start":24,"column_end":37},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2910,"byte_end":2922,"line_start":80,"line_end":80,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2924,"byte_end":2930,"line_start":80,"line_end":80,"column_start":53,"column_end":59},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1835},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2946,"byte_end":2964,"line_start":81,"line_end":81,"column_start":14,"column_end":32},"alias_span":null,"name":"AdaptiveFilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2966,"byte_end":2976,"line_start":81,"line_end":81,"column_start":34,"column_end":44},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":0,"byte_end":2981,"line_start":1,"line_end":82,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":38},{"krate":0,"index":158},{"krate":0,"index":539},{"krate":0,"index":871},{"krate":0,"index":892},{"krate":0,"index":902},{"krate":0,"index":997},{"krate":0,"index":1009},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1078}],"decl_id":null,"docs":" # PNG encoder and decoder","sig":null,"attributes":[{"value":"/ # PNG encoder and decoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains a PNG encoder and decoder. It supports reading of single lines or whole frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":34,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":138,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## The decoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":142,"byte_end":160,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":161,"byte_end":164,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The most important types for decoding purposes are [`Decoder`](struct.Decoder.html) and","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":165,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [`Reader`](struct.Reader.html). They both wrap a `std::io::Read`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":257,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":327,"byte_end":435,"line_start":9,"line_end":9,"column_start":1,"column_end":109}},{"value":"/ image data is reached.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":436,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":463,"byte_end":466,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ### Using the decoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":467,"byte_end":492,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":493,"byte_end":500,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":501,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ // The decoder is a build for reader and can be used to set various decoding options","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":524,"byte_end":612,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"/ // via `Transformations`. The default output transformation is `Transformations::IDENTITY`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":613,"byte_end":708,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ let decoder = png::Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":709,"byte_end":797,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ let mut reader = decoder.read_info().unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":798,"byte_end":848,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ // Allocate the output buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":849,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ let mut buf = vec![0; reader.output_buffer_size()];","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":884,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ // Read the next frame. An APNG might contain multiple frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":940,"byte_end":1006,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ let info = reader.next_frame(&mut buf).unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1007,"byte_end":1059,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ // Grab the bytes of the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1060,"byte_end":1095,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ let bytes = &buf[..info.buffer_size()];","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1096,"byte_end":1139,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ // Inspect more details of the last read frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1140,"byte_end":1191,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/ let in_animation = reader.info().frame_control.is_some();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1192,"byte_end":1253,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1254,"byte_end":1261,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1262,"byte_end":1265,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Encoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1266,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ ### Using the encoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1281,"byte_end":1306,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1307,"byte_end":1310,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1311,"byte_end":1324,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ // For reading and opening files","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1325,"byte_end":1361,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1362,"byte_end":1386,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1387,"byte_end":1409,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufWriter;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1410,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1438,"byte_end":1441,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(r\"/path/to/image.png\");","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1442,"byte_end":1490,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/ let file = File::create(path).unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1491,"byte_end":1534,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ let ref mut w = BufWriter::new(file);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1535,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1577,"byte_end":1580,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1581,"byte_end":1668,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1669,"byte_end":1713,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/ encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1714,"byte_end":1758,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ encoder.set_trns(vec!(0xFFu8, 0xFFu8, 0xFFu8, 0xFFu8));","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1759,"byte_end":1818,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::from_scaled(45455)); // 1.0 / 2.2, scaled by 100000","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1819,"byte_end":1917,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::new(1.0 / 2.2));     // 1.0 / 2.2, unscaled, but rounded","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":1918,"byte_end":2021,"line_start":47,"line_end":47,"column_start":1,"column_end":104}},{"value":"/ let source_chromaticities = png::SourceChromaticities::new(     // Using unscaled instantiation here","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2022,"byte_end":2126,"line_start":48,"line_end":48,"column_start":1,"column_end":105}},{"value":"/     (0.31270, 0.32900),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2127,"byte_end":2154,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/     (0.64000, 0.33000),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2155,"byte_end":2182,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/     (0.30000, 0.60000),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2183,"byte_end":2210,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     (0.15000, 0.06000)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2211,"byte_end":2237,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2238,"byte_end":2244,"line_start":53,"line_end":53,"column_start":1,"column_end":7}},{"value":"/ encoder.set_source_chromaticities(source_chromaticities);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2245,"byte_end":2306,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ let mut writer = encoder.write_header().unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2307,"byte_end":2360,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2361,"byte_end":2364,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2365,"byte_end":2497,"line_start":57,"line_end":57,"column_start":1,"column_end":133}},{"value":"/ writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2498,"byte_end":2550,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2551,"byte_end":2558,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2559,"byte_end":2562,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"deny(unsafe_code)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2564,"byte_end":2585,"line_start":62,"line_end":62,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chunk","qualname":"::chunk","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Chunk types and functions\n","sig":null,"attributes":[{"value":"/ Chunk types and functions","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":2983,"byte_end":3012,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"allow(dead_code)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3013,"byte_end":3033,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3034,"byte_end":3067,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3139,"byte_end":3148,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"ChunkType","qualname":"::chunk::ChunkType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3149,"byte_end":3160,"line_start":7,"line_end":7,"column_start":22,"column_end":33},"name":"0","qualname":"::chunk::ChunkType::0","value":"[u8; 4]","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3217,"byte_end":3221,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"IHDR","qualname":"::chunk::IHDR","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image header\n","sig":null,"attributes":[{"value":"/ Image header","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3190,"byte_end":3206,"line_start":11,"line_end":11,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3278,"byte_end":3282,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"PLTE","qualname":"::chunk::PLTE","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Palette\n","sig":null,"attributes":[{"value":"/ Palette","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3256,"byte_end":3267,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3342,"byte_end":3346,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"IDAT","qualname":"::chunk::IDAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image data\n","sig":null,"attributes":[{"value":"/ Image data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3317,"byte_end":3331,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3409,"byte_end":3413,"line_start":18,"line_end":18,"column_start":11,"column_end":15},"name":"IEND","qualname":"::chunk::IEND","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image trailer\n","sig":null,"attributes":[{"value":"/ Image trailer","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3381,"byte_end":3398,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3503,"byte_end":3507,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"tRNS","qualname":"::chunk::tRNS","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Transparency\n","sig":null,"attributes":[{"value":"/ Transparency","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3476,"byte_end":3492,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3574,"byte_end":3578,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"bKGD","qualname":"::chunk::bKGD","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Background colour\n","sig":null,"attributes":[{"value":"/ Background colour","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3542,"byte_end":3563,"line_start":24,"line_end":24,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3656,"byte_end":3660,"line_start":27,"line_end":27,"column_start":11,"column_end":15},"name":"tIME","qualname":"::chunk::tIME","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image last-modification time\n","sig":null,"attributes":[{"value":"/ Image last-modification time","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3613,"byte_end":3645,"line_start":26,"line_end":26,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3735,"byte_end":3739,"line_start":29,"line_end":29,"column_start":11,"column_end":15},"name":"pHYs","qualname":"::chunk::pHYs","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Physical pixel dimensions\n","sig":null,"attributes":[{"value":"/ Physical pixel dimensions","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3695,"byte_end":3724,"line_start":28,"line_end":28,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3825,"byte_end":3829,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"name":"cHRM","qualname":"::chunk::cHRM","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's pixel chromaticities\n","sig":null,"attributes":[{"value":"/ Source system's pixel chromaticities","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3774,"byte_end":3814,"line_start":30,"line_end":30,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3906,"byte_end":3910,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"name":"gAMA","qualname":"::chunk::gAMA","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's gamma value\n","sig":null,"attributes":[{"value":"/ Source system's gamma value","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3864,"byte_end":3895,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3982,"byte_end":3986,"line_start":35,"line_end":35,"column_start":11,"column_end":15},"name":"sRGB","qualname":"::chunk::sRGB","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" sRGB color space chunk\n","sig":null,"attributes":[{"value":"/ sRGB color space chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":3945,"byte_end":3971,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4053,"byte_end":4057,"line_start":37,"line_end":37,"column_start":11,"column_end":15},"name":"iCCP","qualname":"::chunk::iCCP","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" ICC profile chunk\n","sig":null,"attributes":[{"value":"/ ICC profile chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4021,"byte_end":4042,"line_start":36,"line_end":36,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4140,"byte_end":4144,"line_start":39,"line_end":39,"column_start":11,"column_end":15},"name":"tEXt","qualname":"::chunk::tEXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 uncompressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 uncompressed textual data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4092,"byte_end":4129,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4225,"byte_end":4229,"line_start":41,"line_end":41,"column_start":11,"column_end":15},"name":"zTXt","qualname":"::chunk::zTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 compressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 compressed textual data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4179,"byte_end":4214,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4297,"byte_end":4301,"line_start":43,"line_end":43,"column_start":11,"column_end":15},"name":"iTXt","qualname":"::chunk::iTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 textual data\n","sig":null,"attributes":[{"value":"/ UTF-8 textual data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4264,"byte_end":4286,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4396,"byte_end":4400,"line_start":48,"line_end":48,"column_start":11,"column_end":15},"name":"acTL","qualname":"::chunk::acTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Animation control\n","sig":null,"attributes":[{"value":"/ Animation control","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4364,"byte_end":4385,"line_start":47,"line_end":47,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4463,"byte_end":4467,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"fcTL","qualname":"::chunk::fcTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame control\n","sig":null,"attributes":[{"value":"/ Frame control","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4435,"byte_end":4452,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4527,"byte_end":4531,"line_start":52,"line_end":52,"column_start":11,"column_end":15},"name":"fdAT","qualname":"::chunk::fdAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame data\n","sig":null,"attributes":[{"value":"/ Frame data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4502,"byte_end":4516,"line_start":51,"line_end":51,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4652,"byte_end":4663,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"is_critical","qualname":"::chunk::is_critical","value":"pub fn is_critical(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is critical.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is critical.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4602,"byte_end":4644,"line_start":56,"line_end":56,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4778,"byte_end":4788,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"is_private","qualname":"::chunk::is_private","value":"pub fn is_private(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is private.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is private.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4729,"byte_end":4770,"line_start":61,"line_end":61,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4967,"byte_end":4979,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"reserved_set","qualname":"::chunk::reserved_set","value":"pub fn reserved_set(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the reserved bit of the chunk name is set.\n If it is set the chunk name is invalid.\n","sig":null,"attributes":[{"value":"/ Checks whether the reserved bit of the chunk name is set.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4854,"byte_end":4915,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ If it is set the chunk name is invalid.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":4916,"byte_end":4959,"line_start":67,"line_end":67,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5110,"byte_end":5122,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"safe_to_copy","qualname":"::chunk::safe_to_copy","value":"pub fn safe_to_copy(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is safe to copy if unknown.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is safe to copy if unknown.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5045,"byte_end":5102,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6299,"byte_end":6308,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::common::ColorType::Grayscale","value":"ColorType::Grayscale","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" 1 grayscale sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6271,"byte_end":6294,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6371,"byte_end":6374,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::common::ColorType::Rgb","value":"ColorType::Rgb","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6318,"byte_end":6366,"line_start":13,"line_end":13,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6424,"byte_end":6431,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::common::ColorType::Indexed","value":"ColorType::Indexed","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" 1 sample for the palette index.\n","sig":null,"attributes":[{"value":"/ 1 sample for the palette index.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6384,"byte_end":6419,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6490,"byte_end":6504,"line_start":18,"line_end":18,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::common::ColorType::GrayscaleAlpha","value":"ColorType::GrayscaleAlpha","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" 1 grayscale sample, then 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample, then 1 alpha sample.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6441,"byte_end":6485,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6596,"byte_end":6600,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::common::ColorType::Rgba","value":"ColorType::Rgba","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6514,"byte_end":6591,"line_start":19,"line_end":19,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6255,"byte_end":6264,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::common::ColorType","value":"pub enum ColorType {\n    Grayscale = ,\n    Rgb = ,\n    Indexed = ,\n    GrayscaleAlpha = ,\n    Rgba = ,\n}","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113}],"decl_id":null,"docs":" Describes how a pixel is encoded.\n","sig":null,"attributes":[{"value":"/ Describes how a pixel is encoded.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6151,"byte_end":6188,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6234,"byte_end":6245,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6711,"byte_end":6718,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"samples","qualname":"<ColorType>::samples","value":"pub fn samples(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of samples used per pixel encoded in this way.\n","sig":null,"attributes":[{"value":"/ Returns the number of samples used per pixel encoded in this way.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6630,"byte_end":6699,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":7092,"byte_end":7099,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<ColorType>::from_u8","value":"pub fn from_u8(u8) -> Option<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":7009,"byte_end":7080,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8944,"byte_end":8947,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"One","qualname":"::common::BitDepth::One","value":"BitDepth::One","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8957,"byte_end":8960,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"Two","qualname":"::common::BitDepth::Two","value":"BitDepth::Two","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8970,"byte_end":8974,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Four","qualname":"::common::BitDepth::Four","value":"BitDepth::Four","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8984,"byte_end":8989,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Eight","qualname":"::common::BitDepth::Eight","value":"BitDepth::Eight","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8999,"byte_end":9006,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::common::BitDepth::Sixteen","value":"BitDepth::Sixteen","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8929,"byte_end":8937,"line_start":86,"line_end":86,"column_start":10,"column_end":18},"name":"BitDepth","qualname":"::common::BitDepth","value":"pub enum BitDepth { One = , Two = , Four = , Eight = , Sixteen = , }","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140}],"decl_id":null,"docs":" Bit depth of the PNG file.\n Specifies the number of bits per sample.\n","sig":null,"attributes":[{"value":"/ Bit depth of the PNG file.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8787,"byte_end":8817,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ Specifies the number of bits per sample.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8818,"byte_end":8862,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":8908,"byte_end":8919,"line_start":85,"line_end":85,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9525,"byte_end":9532,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BitDepth>::from_u8","value":"pub fn from_u8(u8) -> Option<BitDepth>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9442,"byte_end":9513,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9960,"byte_end":9975,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"PixelDimensions","qualname":"::common::PixelDimensions","value":"PixelDimensions { xppu, yppu, unit }","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181}],"decl_id":null,"docs":" Pixel dimensions information\n","sig":null,"attributes":[{"value":"/ Pixel dimensions information","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9886,"byte_end":9918,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10018,"byte_end":10022,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"name":"xppu","qualname":"::common::PixelDimensions::xppu","value":"u32","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Pixels per unit, X axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, X axis","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9982,"byte_end":10009,"line_start":130,"line_end":130,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10069,"byte_end":10073,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"yppu","qualname":"::common::PixelDimensions::yppu","value":"u32","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Pixels per unit, Y axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, Y axis","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10033,"byte_end":10060,"line_start":132,"line_end":132,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10128,"byte_end":10132,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"unit","qualname":"::common::PixelDimensions::unit","value":"common::Unit","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Either *Meter* or *Unspecified*\n","sig":null,"attributes":[{"value":"/ Either *Meter* or *Unspecified*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10084,"byte_end":10119,"line_start":134,"line_end":134,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10262,"byte_end":10273,"line_start":142,"line_end":142,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::common::Unit::Unspecified","value":"Unit::Unspecified","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10283,"byte_end":10288,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Meter","qualname":"::common::Unit::Meter","value":"Unit::Meter","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10251,"byte_end":10255,"line_start":141,"line_end":141,"column_start":10,"column_end":14},"name":"Unit","qualname":"::common::Unit","value":"pub enum Unit { Unspecified = , Meter = , }","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1191}],"decl_id":null,"docs":" Physical unit of the pixel dimensions\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10188,"byte_end":10199,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ Physical unit of the pixel dimensions","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10200,"byte_end":10241,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10396,"byte_end":10403,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Unit>::from_u8","value":"pub fn from_u8(u8) -> Option<Unit>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10313,"byte_end":10384,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10758,"byte_end":10762,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"None","qualname":"::common::DisposeOp::None","value":"DisposeOp::None","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Leave the buffer unchanged.\n","sig":null,"attributes":[{"value":"/ Leave the buffer unchanged.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10722,"byte_end":10753,"line_start":161,"line_end":161,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10820,"byte_end":10830,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposeOp::Background","value":"DisposeOp::Background","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Clear buffer with the background color.\n","sig":null,"attributes":[{"value":"/ Clear buffer with the background color.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10772,"byte_end":10815,"line_start":163,"line_end":163,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10904,"byte_end":10912,"line_start":166,"line_end":166,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposeOp::Previous","value":"DisposeOp::Previous","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Reset the buffer to the state before the current frame.\n","sig":null,"attributes":[{"value":"/ Reset the buffer to the state before the current frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10840,"byte_end":10899,"line_start":165,"line_end":165,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10706,"byte_end":10715,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"name":"DisposeOp","qualname":"::common::DisposeOp","value":"pub enum DisposeOp { None = , Background = , Previous = , }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212}],"decl_id":null,"docs":" How to reset buffer of an animated png (APNG) at the end of a frame.\n","sig":null,"attributes":[{"value":"/ How to reset buffer of an animated png (APNG) at the end of a frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10567,"byte_end":10639,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10685,"byte_end":10696,"line_start":159,"line_end":159,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11057,"byte_end":11064,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposeOp>::from_u8","value":"pub fn from_u8(u8) -> Option<DisposeOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10942,"byte_end":11045,"line_start":170,"line_end":170,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11809,"byte_end":11815,"line_start":197,"line_end":197,"column_start":5,"column_end":11},"name":"Source","qualname":"::common::BlendOp::Source","value":"BlendOp::Source","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Pixels overwrite the value at their position.\n","sig":null,"attributes":[{"value":"/ Pixels overwrite the value at their position.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11755,"byte_end":11804,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11899,"byte_end":11903,"line_start":199,"line_end":199,"column_start":5,"column_end":9},"name":"Over","qualname":"::common::BlendOp::Over","value":"BlendOp::Over","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" The new pixels are blended into the current state based on alpha.\n","sig":null,"attributes":[{"value":"/ The new pixels are blended into the current state based on alpha.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11825,"byte_end":11894,"line_start":198,"line_end":198,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11741,"byte_end":11748,"line_start":195,"line_end":195,"column_start":10,"column_end":17},"name":"BlendOp","qualname":"::common::BlendOp","value":"pub enum BlendOp { Source = , Over = , }","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1230}],"decl_id":null,"docs":" How pixels are written into the buffer.\n","sig":null,"attributes":[{"value":"/ How pixels are written into the buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11631,"byte_end":11674,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11720,"byte_end":11731,"line_start":194,"line_end":194,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12046,"byte_end":12053,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BlendOp>::from_u8","value":"pub fn from_u8(u8) -> Option<BlendOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11931,"byte_end":12034,"line_start":203,"line_end":203,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12561,"byte_end":12573,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"FrameControl","qualname":"::common::FrameControl","value":"FrameControl { sequence_number, width, height, x_offset, y_offset, delay_num, delay_den, dispose_op, blend_op }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" Frame control information\n","sig":null,"attributes":[{"value":"/ Frame control information","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12490,"byte_end":12519,"line_start":223,"line_end":223,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12648,"byte_end":12663,"line_start":227,"line_end":227,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::common::FrameControl::sequence_number","value":"u32","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Sequence number of the animation chunk, starting from 0\n","sig":null,"attributes":[{"value":"/ Sequence number of the animation chunk, starting from 0","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12580,"byte_end":12639,"line_start":226,"line_end":226,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12715,"byte_end":12720,"line_start":229,"line_end":229,"column_start":9,"column_end":14},"name":"width","qualname":"::common::FrameControl::width","value":"u32","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Width of the following frame\n","sig":null,"attributes":[{"value":"/ Width of the following frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12674,"byte_end":12706,"line_start":228,"line_end":228,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12773,"byte_end":12779,"line_start":231,"line_end":231,"column_start":9,"column_end":15},"name":"height","qualname":"::common::FrameControl::height","value":"u32","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Height of the following frame\n","sig":null,"attributes":[{"value":"/ Height of the following frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12731,"byte_end":12764,"line_start":230,"line_end":230,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12852,"byte_end":12860,"line_start":233,"line_end":233,"column_start":9,"column_end":17},"name":"x_offset","qualname":"::common::FrameControl::x_offset","value":"u32","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" X position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ X position at which to render the following frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12790,"byte_end":12843,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12933,"byte_end":12941,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::common::FrameControl::y_offset","value":"u32","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Y position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ Y position at which to render the following frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12871,"byte_end":12924,"line_start":234,"line_end":234,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12995,"byte_end":13004,"line_start":237,"line_end":237,"column_start":9,"column_end":18},"name":"delay_num","qualname":"::common::FrameControl::delay_num","value":"u16","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Frame delay fraction numerator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction numerator","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12952,"byte_end":12986,"line_start":236,"line_end":236,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13060,"byte_end":13069,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"name":"delay_den","qualname":"::common::FrameControl::delay_den","value":"u16","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Frame delay fraction denominator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction denominator","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13015,"byte_end":13051,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13158,"byte_end":13168,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"dispose_op","qualname":"::common::FrameControl::dispose_op","value":"common::DisposeOp","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Type of frame area disposal to be done after rendering this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area disposal to be done after rendering this frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13080,"byte_end":13149,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13241,"byte_end":13249,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"blend_op","qualname":"::common::FrameControl::blend_op","value":"common::BlendOp","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Type of frame area rendering for this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area rendering for this frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13185,"byte_end":13232,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13663,"byte_end":13674,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"set_seq_num","qualname":"<FrameControl>::set_seq_num","value":"pub fn set_seq_num(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13748,"byte_end":13759,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"inc_seq_num","qualname":"<FrameControl>::inc_seq_num","value":"pub fn inc_seq_num(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13834,"byte_end":13840,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"encode","qualname":"<FrameControl>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14620,"byte_end":14636,"line_start":289,"line_end":289,"column_start":12,"column_end":28},"name":"AnimationControl","qualname":"::common::AnimationControl","value":"AnimationControl { num_frames, num_plays }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"decl_id":null,"docs":" Animation control information\n","sig":null,"attributes":[{"value":"/ Animation control information","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14545,"byte_end":14578,"line_start":287,"line_end":287,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14672,"byte_end":14682,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"num_frames","qualname":"::common::AnimationControl::num_frames","value":"u32","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Number of frames\n","sig":null,"attributes":[{"value":"/ Number of frames","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14643,"byte_end":14663,"line_start":290,"line_end":290,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14771,"byte_end":14780,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"num_plays","qualname":"::common::AnimationControl::num_plays","value":"u32","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Number of times to loop this APNG.  0 indicates infinite looping.\n","sig":null,"attributes":[{"value":"/ Number of times to loop this APNG.  0 indicates infinite looping.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14693,"byte_end":14762,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14825,"byte_end":14831,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"encode","qualname":"<AnimationControl>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15238,"byte_end":15245,"line_start":309,"line_end":309,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" Default level\n","sig":null,"attributes":[{"value":"/ Default level","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15216,"byte_end":15233,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15284,"byte_end":15288,"line_start":311,"line_end":311,"column_start":5,"column_end":9},"name":"Fast","qualname":"::common::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" Fast minimal compression\n","sig":null,"attributes":[{"value":"/ Fast minimal compression","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15251,"byte_end":15279,"line_start":310,"line_end":310,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15510,"byte_end":15514,"line_start":317,"line_end":317,"column_start":5,"column_end":9},"name":"Best","qualname":"::common::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" Higher compression level","sig":null,"attributes":[{"value":"/ Higher compression level","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15294,"byte_end":15322,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15327,"byte_end":15330,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15335,"byte_end":15401,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15406,"byte_end":15488,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15493,"byte_end":15505,"line_start":316,"line_end":316,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15520,"byte_end":15527,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::common::Compression::Huffman","value":"Compression::Huffman","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15533,"byte_end":15536,"line_start":319,"line_end":319,"column_start":5,"column_end":8},"name":"Rle","qualname":"::common::Compression::Rle","value":"Compression::Rle","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15198,"byte_end":15209,"line_start":307,"line_end":307,"column_start":10,"column_end":21},"name":"Compression","qualname":"::common::Compression","value":"pub enum Compression { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276}],"decl_id":null,"docs":" The type and strength of applied compression.\n","sig":null,"attributes":[{"value":"/ The type and strength of applied compression.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15109,"byte_end":15158,"line_start":305,"line_end":305,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15736,"byte_end":15747,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"ScaledFloat","qualname":"::common::ScaledFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer scaled version of a floating point value,\n equivalent to an integer quotient with fixed denominator (100_000)).\n","sig":null,"attributes":[{"value":"/ An unsigned integer scaled version of a floating point value,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15541,"byte_end":15606,"line_start":322,"line_end":322,"column_start":1,"column_end":66}},{"value":"/ equivalent to an integer quotient with fixed denominator (100_000)).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15607,"byte_end":15679,"line_start":323,"line_end":323,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15895,"byte_end":15903,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"in_range","qualname":"<ScaledFloat>::in_range","value":"pub fn in_range(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value is within the clamped range of this type.\n","sig":null,"attributes":[{"value":"/ Gets whether the value is within the clamped range of this type.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15815,"byte_end":15883,"line_start":330,"line_end":330,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16190,"byte_end":16195,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"exact","qualname":"<ScaledFloat>::exact","value":"pub fn exact(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value can be exactly converted in round-trip.\n","sig":null,"attributes":[{"value":"/ Gets whether the value can be exactly converted in round-trip.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16017,"byte_end":16083,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16088,"byte_end":16115,"line_start":336,"line_end":336,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16664,"byte_end":16667,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<ScaledFloat>::new","value":"pub fn new(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Slightly inaccurate scaling and quantization.\n Clamps the value into the representable range if it is negative or too large.\n","sig":null,"attributes":[{"value":"/ Slightly inaccurate scaling and quantization.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16517,"byte_end":16566,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ Clamps the value into the representable range if it is negative or too large.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16571,"byte_end":16652,"line_start":352,"line_end":352,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16848,"byte_end":16859,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"from_scaled","qualname":"<ScaledFloat>::from_scaled","value":"pub fn from_scaled(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully accurate construction from a value scaled as per specification.\n","sig":null,"attributes":[{"value":"/ Fully accurate construction from a value scaled as per specification.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16763,"byte_end":16836,"line_start":359,"line_end":359,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16962,"byte_end":16973,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"into_scaled","qualname":"<ScaledFloat>::into_scaled","value":"pub fn into_scaled(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the accurate encoded value.\n","sig":null,"attributes":[{"value":"/ Get the accurate encoded value.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":16915,"byte_end":16950,"line_start":364,"line_end":364,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17074,"byte_end":17084,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"into_value","qualname":"<ScaledFloat>::into_value","value":"pub fn into_value(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled value as a floating point.\n","sig":null,"attributes":[{"value":"/ Get the unscaled value as a floating point.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17015,"byte_end":17062,"line_start":369,"line_end":369,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17419,"byte_end":17439,"line_start":381,"line_end":381,"column_start":12,"column_end":32},"name":"SourceChromaticities","qualname":"::common::SourceChromaticities","value":"SourceChromaticities { white, red, green, blue }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"decl_id":null,"docs":" Chromaticities of the color space primaries\n","sig":null,"attributes":[{"value":"/ Chromaticities of the color space primaries","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17315,"byte_end":17362,"line_start":379,"line_end":379,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17450,"byte_end":17455,"line_start":382,"line_end":382,"column_start":9,"column_end":14},"name":"white","qualname":"::common::SourceChromaticities::white","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17493,"byte_end":17496,"line_start":383,"line_end":383,"column_start":9,"column_end":12},"name":"red","qualname":"::common::SourceChromaticities::red","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17534,"byte_end":17539,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"green","qualname":"::common::SourceChromaticities::green","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17577,"byte_end":17581,"line_start":385,"line_end":385,"column_start":9,"column_end":13},"name":"blue","qualname":"::common::SourceChromaticities::blue","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17653,"byte_end":17656,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"new","qualname":"<SourceChromaticities>::new","value":"pub fn new((f32, f32), (f32, f32), (f32, f32), (f32, f32)) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":18111,"byte_end":18122,"line_start":399,"line_end":399,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SourceChromaticities>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":18083,"byte_end":18099,"line_start":398,"line_end":398,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19161,"byte_end":19167,"line_start":420,"line_end":420,"column_start":12,"column_end":18},"name":"encode","qualname":"<SourceChromaticities>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19660,"byte_end":19670,"line_start":432,"line_end":432,"column_start":5,"column_end":15},"name":"Perceptual","qualname":"::common::SrgbRenderingIntent::Perceptual","value":"SrgbRenderingIntent::Perceptual","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.\n","sig":null,"attributes":[{"value":"/ For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19525,"byte_end":19655,"line_start":431,"line_end":431,"column_start":5,"column_end":135}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19796,"byte_end":19816,"line_start":434,"line_end":434,"column_start":5,"column_end":25},"name":"RelativeColorimetric","qualname":"::common::SrgbRenderingIntent::RelativeColorimetric","value":"SrgbRenderingIntent::RelativeColorimetric","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" For images requiring colour appearance matching (relative to the output device white point), such as logos.\n","sig":null,"attributes":[{"value":"/ For images requiring colour appearance matching (relative to the output device white point), such as logos.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19680,"byte_end":19791,"line_start":433,"line_end":433,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19947,"byte_end":19957,"line_start":436,"line_end":436,"column_start":5,"column_end":15},"name":"Saturation","qualname":"::common::SrgbRenderingIntent::Saturation","value":"SrgbRenderingIntent::Saturation","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.\n","sig":null,"attributes":[{"value":"/ For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19826,"byte_end":19942,"line_start":435,"line_end":435,"column_start":5,"column_end":121}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20110,"byte_end":20130,"line_start":438,"line_end":438,"column_start":5,"column_end":25},"name":"AbsoluteColorimetric","qualname":"::common::SrgbRenderingIntent::AbsoluteColorimetric","value":"SrgbRenderingIntent::AbsoluteColorimetric","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).\n","sig":null,"attributes":[{"value":"/ For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19967,"byte_end":20105,"line_start":437,"line_end":437,"column_start":5,"column_end":143}}]},{"kind":"Enum","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19499,"byte_end":19518,"line_start":430,"line_end":430,"column_start":10,"column_end":29},"name":"SrgbRenderingIntent","qualname":"::common::SrgbRenderingIntent","value":"pub enum SrgbRenderingIntent {\n    Perceptual = ,\n    RelativeColorimetric = ,\n    Saturation = ,\n    AbsoluteColorimetric = ,\n}","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327}],"decl_id":null,"docs":" The rendering intent for an sRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent for an sRGB image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19295,"byte_end":19338,"line_start":425,"line_end":425,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19339,"byte_end":19342,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ Presence of this data also indicates that the image conforms to the sRGB color space.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19343,"byte_end":19432,"line_start":427,"line_end":427,"column_start":1,"column_end":90}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":19433,"byte_end":19444,"line_start":428,"line_end":428,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20602,"byte_end":20608,"line_start":456,"line_end":456,"column_start":12,"column_end":18},"name":"encode","qualname":"<SrgbRenderingIntent>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20808,"byte_end":20812,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"Info","qualname":"::common::Info","value":"Info { width, height, bit_depth, color_type, interlaced, trns, pixel_dims, source_gamma, palette, frame_control, animation_control, compression, source_chromaticities, srgb, icc_profile, uncompressed_latin1_text, compressed_latin1_text, utf8_text }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360}],"decl_id":null,"docs":" PNG info struct\n","sig":null,"attributes":[{"value":"/ PNG info struct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20735,"byte_end":20754,"line_start":461,"line_end":461,"column_start":1,"column_end":20}},{"value":"non_exhaustive","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20779,"byte_end":20796,"line_start":463,"line_end":463,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20827,"byte_end":20832,"line_start":465,"line_end":465,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Info::width","value":"u32","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20847,"byte_end":20853,"line_start":466,"line_end":466,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Info::height","value":"u32","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20868,"byte_end":20877,"line_start":467,"line_end":467,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::common::Info::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20941,"byte_end":20951,"line_start":469,"line_end":469,"column_start":9,"column_end":19},"name":"color_type","qualname":"::common::Info::color_type","value":"common::ColorType","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" How colors are stored in the image.\n","sig":null,"attributes":[{"value":"/ How colors are stored in the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20893,"byte_end":20932,"line_start":468,"line_end":468,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20972,"byte_end":20982,"line_start":470,"line_end":470,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Info::interlaced","value":"bool","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21113,"byte_end":21117,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"name":"trns","qualname":"::common::Info::trns","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.\n","sig":null,"attributes":[{"value":"/ The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20994,"byte_end":21104,"line_start":471,"line_end":471,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21150,"byte_end":21160,"line_start":473,"line_end":473,"column_start":9,"column_end":19},"name":"pixel_dims","qualname":"::common::Info::pixel_dims","value":"std::option::Option<common::PixelDimensions>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21231,"byte_end":21243,"line_start":475,"line_end":475,"column_start":9,"column_end":21},"name":"source_gamma","qualname":"::common::Info::source_gamma","value":"std::option::Option<common::ScaledFloat>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Gamma of the source system.\n","sig":null,"attributes":[{"value":"/ Gamma of the source system.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21191,"byte_end":21222,"line_start":474,"line_end":474,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21422,"byte_end":21429,"line_start":477,"line_end":477,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Info::palette","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).\n","sig":null,"attributes":[{"value":"/ The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21270,"byte_end":21413,"line_start":476,"line_end":476,"column_start":5,"column_end":148}}]},{"kind":"Field","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21462,"byte_end":21475,"line_start":478,"line_end":478,"column_start":9,"column_end":22},"name":"frame_control","qualname":"::common::Info::frame_control","value":"std::option::Option<common::FrameControl>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21507,"byte_end":21524,"line_start":479,"line_end":479,"column_start":9,"column_end":26},"name":"animation_control","qualname":"::common::Info::animation_control","value":"std::option::Option<common::AnimationControl>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21560,"byte_end":21571,"line_start":480,"line_end":480,"column_start":9,"column_end":20},"name":"compression","qualname":"::common::Info::compression","value":"common::Compression","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21639,"byte_end":21660,"line_start":482,"line_end":482,"column_start":9,"column_end":30},"name":"source_chromaticities","qualname":"::common::Info::source_chromaticities","value":"std::option::Option<common::SourceChromaticities>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Chromaticities of the source system.\n","sig":null,"attributes":[{"value":"/ Chromaticities of the source system.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21590,"byte_end":21630,"line_start":481,"line_end":481,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21850,"byte_end":21854,"line_start":486,"line_end":486,"column_start":9,"column_end":13},"name":"srgb","qualname":"::common::Info::srgb","value":"std::option::Option<common::SrgbRenderingIntent>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" The rendering intent of an SRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent of an SRGB image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21696,"byte_end":21738,"line_start":483,"line_end":483,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21743,"byte_end":21746,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Presence of this value also indicates that the image conforms to the SRGB color space.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21751,"byte_end":21841,"line_start":485,"line_end":485,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21932,"byte_end":21943,"line_start":488,"line_end":488,"column_start":9,"column_end":20},"name":"icc_profile","qualname":"::common::Info::icc_profile","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" The ICC profile for the image.\n","sig":null,"attributes":[{"value":"/ The ICC profile for the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21889,"byte_end":21923,"line_start":487,"line_end":487,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21995,"byte_end":22019,"line_start":490,"line_end":490,"column_start":9,"column_end":33},"name":"uncompressed_latin1_text","qualname":"::common::Info::uncompressed_latin1_text","value":"std::vec::Vec<text_metadata::TEXtChunk>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" tEXt field\n","sig":null,"attributes":[{"value":"/ tEXt field","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":21972,"byte_end":21986,"line_start":489,"line_end":489,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22064,"byte_end":22086,"line_start":492,"line_end":492,"column_start":9,"column_end":31},"name":"compressed_latin1_text","qualname":"::common::Info::compressed_latin1_text","value":"std::vec::Vec<text_metadata::ZTXtChunk>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" zTXt field\n","sig":null,"attributes":[{"value":"/ zTXt field","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22041,"byte_end":22055,"line_start":491,"line_end":491,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22131,"byte_end":22140,"line_start":494,"line_end":494,"column_start":9,"column_end":18},"name":"utf8_text","qualname":"::common::Info::utf8_text","value":"std::vec::Vec<text_metadata::ITXtChunk>","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" iTXt field\n","sig":null,"attributes":[{"value":"/ iTXt field","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22108,"byte_end":22122,"line_start":493,"line_end":493,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23116,"byte_end":23125,"line_start":526,"line_end":526,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Info>::with_size","value":"pub fn with_size(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A utility constructor for a default info with width and height.\n","sig":null,"attributes":[{"value":"/ A utility constructor for a default info with width and height.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23037,"byte_end":23104,"line_start":525,"line_end":525,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23322,"byte_end":23326,"line_start":535,"line_end":535,"column_start":12,"column_end":16},"name":"size","qualname":"<Info>::size","value":"pub fn size(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Size of the image, width then height.\n","sig":null,"attributes":[{"value":"/ Size of the image, width then height.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23269,"byte_end":23310,"line_start":534,"line_end":534,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23454,"byte_end":23465,"line_start":540,"line_end":540,"column_start":12,"column_end":23},"name":"is_animated","qualname":"<Info>::is_animated","value":"pub fn is_animated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the image is an APNG image.\n","sig":null,"attributes":[{"value":"/ Returns true if the image is an APNG image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23395,"byte_end":23442,"line_start":539,"line_end":539,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23634,"byte_end":23651,"line_start":545,"line_end":545,"column_start":12,"column_end":29},"name":"animation_control","qualname":"<Info>::animation_control","value":"pub fn animation_control(&Self) -> Option<&AnimationControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the image.\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23567,"byte_end":23622,"line_start":544,"line_end":544,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23815,"byte_end":23828,"line_start":550,"line_end":550,"column_start":12,"column_end":25},"name":"frame_control","qualname":"<Info>::frame_control","value":"pub fn frame_control(&Self) -> Option<&FrameControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the current frame\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the current frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23741,"byte_end":23803,"line_start":549,"line_end":549,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23963,"byte_end":23977,"line_start":555,"line_end":555,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<Info>::bits_per_pixel","value":"pub fn bits_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bits per pixel.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23910,"byte_end":23951,"line_start":554,"line_end":554,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":24121,"byte_end":24136,"line_start":560,"line_end":560,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<Info>::bytes_per_pixel","value":"pub fn bytes_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes per pixel.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":24067,"byte_end":24109,"line_start":559,"line_end":559,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":25527,"byte_end":25536,"line_start":586,"line_end":586,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<Info>::raw_bytes","value":"pub fn raw_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced image.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":25449,"byte_end":25515,"line_start":585,"line_end":585,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":25695,"byte_end":25709,"line_start":591,"line_end":591,"column_start":12,"column_end":26},"name":"raw_row_length","qualname":"<Info>::raw_row_length","value":"pub fn raw_row_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":25619,"byte_end":25683,"line_start":590,"line_end":590,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26045,"byte_end":26070,"line_start":601,"line_end":601,"column_start":12,"column_end":37},"name":"raw_row_length_from_width","qualname":"<Info>::raw_row_length_from_width","value":"pub fn raw_row_length_from_width(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row of width `width`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row of width `width`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":25952,"byte_end":26033,"line_start":600,"line_end":600,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26416,"byte_end":26422,"line_start":610,"line_end":610,"column_start":12,"column_end":18},"name":"encode","qualname":"<Info>::encode","value":"pub fn encode<W: Write>(&Self, W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this header to the writer.","sig":null,"attributes":[{"value":"/ Encode this header to the writer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26198,"byte_end":26235,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26240,"byte_end":26243,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Note that this does _not_ include the PNG signature, it starts with the IHDR chunk and then","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26248,"byte_end":26343,"line_start":608,"line_end":608,"column_start":5,"column_end":100}},{"value":"/ includes other chunks that were added to the header.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":26348,"byte_end":26404,"line_start":609,"line_end":609,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":29817,"byte_end":29832,"line_start":705,"line_end":705,"column_start":16,"column_end":31},"name":"Transformations","qualname":"::common::Transformations","value":"Transformations {  }","parent":null,"children":[{"krate":0,"index":1368}],"decl_id":null,"docs":" Output transformations","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":29884,"byte_end":29892,"line_start":707,"line_end":707,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::common::Transformations::IDENTITY","value":"Self","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" No transformation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":29992,"byte_end":30000,"line_start":709,"line_end":709,"column_start":15,"column_end":23},"name":"STRIP_16","qualname":"::common::Transformations::STRIP_16","value":"Self","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" Strip 16-bit samples to 8 bits\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30226,"byte_end":30232,"line_start":713,"line_end":713,"column_start":15,"column_end":21},"name":"EXPAND","qualname":"::common::Transformations::EXPAND","value":"Self","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" Expand paletted images to RGB; expand grayscale images of\n less than 8-bit depth to 8-bit depth; and expand tRNS chunks\n to alpha channels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30516,"byte_end":30535,"line_start":722,"line_end":722,"column_start":12,"column_end":31},"name":"normalize_to_color8","qualname":"<Transformations>::normalize_to_color8","value":"pub fn normalize_to_color8() -> Transformations","parent":null,"children":[],"decl_id":null,"docs":" Transform every input to 8bit grayscale or color.","sig":null,"attributes":[{"value":"/ Transform every input to 8bit grayscale or color.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30308,"byte_end":30361,"line_start":718,"line_end":718,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30366,"byte_end":30369,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This sets `EXPAND` and `STRIP_16` which is similar to the default transformation used by","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30374,"byte_end":30466,"line_start":720,"line_end":720,"column_start":5,"column_end":97}},{"value":"/ this library prior to `0.17`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30471,"byte_end":30504,"line_start":721,"line_end":721,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30841,"byte_end":30855,"line_start":735,"line_end":735,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::common::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":1465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67498,"byte_end":67505,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::decoder::stream::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" Nothing decoded yet\n","sig":null,"attributes":[{"value":"/ Nothing decoded yet","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67470,"byte_end":67493,"line_start":53,"line_end":53,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67511,"byte_end":67517,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Header","qualname":"::decoder::stream::Decoded::Header","value":"Decoded::Header(u32, u32, BitDepth, ColorType, bool)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67560,"byte_end":67570,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ChunkBegin","qualname":"::decoder::stream::Decoded::ChunkBegin","value":"Decoded::ChunkBegin(u32, ChunkType)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67592,"byte_end":67605,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"ChunkComplete","qualname":"::decoder::stream::Decoded::ChunkComplete","value":"Decoded::ChunkComplete(u32, ChunkType)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67627,"byte_end":67642,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"PixelDimensions","qualname":"::decoder::stream::Decoded::PixelDimensions","value":"Decoded::PixelDimensions(PixelDimensions)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67665,"byte_end":67681,"line_start":59,"line_end":59,"column_start":5,"column_end":21},"name":"AnimationControl","qualname":"::decoder::stream::Decoded::AnimationControl","value":"Decoded::AnimationControl(AnimationControl)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67705,"byte_end":67717,"line_start":60,"line_end":60,"column_start":5,"column_end":17},"name":"FrameControl","qualname":"::decoder::stream::Decoded::FrameControl","value":"Decoded::FrameControl(FrameControl)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67769,"byte_end":67778,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"ImageData","qualname":"::decoder::stream::Decoded::ImageData","value":"Decoded::ImageData","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" Decoded raw image data.\n","sig":null,"attributes":[{"value":"/ Decoded raw image data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67737,"byte_end":67764,"line_start":61,"line_end":61,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67993,"byte_end":68009,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"name":"ImageDataFlushed","qualname":"::decoder::stream::Decoded::ImageDataFlushed","value":"Decoded::ImageDataFlushed","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" The last of a consecutive chunk of IDAT was done.\n This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but\n not that no additional IDAT chunk follows.\n","sig":null,"attributes":[{"value":"/ The last of a consecutive chunk of IDAT was done.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67784,"byte_end":67837,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/ This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67842,"byte_end":67937,"line_start":64,"line_end":64,"column_start":5,"column_end":100}},{"value":"/ not that no additional IDAT chunk follows.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67942,"byte_end":67988,"line_start":65,"line_end":65,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68015,"byte_end":68027,"line_start":67,"line_end":67,"column_start":5,"column_end":17},"name":"PartialChunk","qualname":"::decoder::stream::Decoded::PartialChunk","value":"Decoded::PartialChunk(ChunkType)","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68044,"byte_end":68052,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::decoder::stream::Decoded::ImageEnd","value":"Decoded::ImageEnd","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67456,"byte_end":67463,"line_start":52,"line_end":52,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::decoder::stream::Decoded","value":"pub enum Decoded {\n    Nothing,\n    Header(u32, u32, BitDepth, ColorType, bool),\n    ChunkBegin(u32, ChunkType),\n    ChunkComplete(u32, ChunkType),\n    PixelDimensions(PixelDimensions),\n    AnimationControl(AnimationControl),\n    FrameControl(FrameControl),\n    ImageData,\n    ImageDataFlushed,\n    PartialChunk(ChunkType),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1531},{"krate":0,"index":1535},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1555}],"decl_id":null,"docs":" Result of the decoding process\n","sig":null,"attributes":[{"value":"/ Result of the decoding process","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":67412,"byte_end":67446,"line_start":51,"line_end":51,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68485,"byte_end":68492,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"IoError","qualname":"::decoder::stream::DecodingError::IoError","value":"DecodingError::IoError(io::Error)","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":" An error in IO of the underlying reader.\n","sig":null,"attributes":[{"value":"/ An error in IO of the underlying reader.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68436,"byte_end":68480,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68904,"byte_end":68910,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Format","qualname":"::decoder::stream::DecodingError::Format","value":"DecodingError::Format(FormatError)","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":" The input image was not a valid PNG.","sig":null,"attributes":[{"value":"/ The input image was not a valid PNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68509,"byte_end":68549,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68554,"byte_end":68557,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ There isn't a lot that can be done here, except if the program itself was responsible for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68562,"byte_end":68655,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ creating this image then investigate the generator. This is internally implemented with a","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68660,"byte_end":68753,"line_start":83,"line_end":83,"column_start":5,"column_end":98}},{"value":"/ large Enum. If You are interested in accessing some of the more exact information on the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68758,"byte_end":68850,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ variant then we can discuss in an issue.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68855,"byte_end":68899,"line_start":85,"line_end":85,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69750,"byte_end":69759,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::decoder::stream::DecodingError::Parameter","value":"DecodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":" An interface was used incorrectly.","sig":null,"attributes":[{"value":"/ An interface was used incorrectly.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68929,"byte_end":68967,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68972,"byte_end":68975,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is used in cases where it's expected that the programmer might trip up and stability","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68980,"byte_end":69073,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ could be affected. For example when:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69078,"byte_end":69118,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69123,"byte_end":69126,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ * The decoder is polled for more animation frames despite being done (or not being animated","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69131,"byte_end":69226,"line_start":92,"line_end":92,"column_start":5,"column_end":100}},{"value":"/   in the first place).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69231,"byte_end":69257,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ * The output buffer does not have the required size.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69262,"byte_end":69318,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69323,"byte_end":69326,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ As a rough guideline for introducing new variants parts of the requirements are dynamically","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69331,"byte_end":69426,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/ derived from the (untrusted) input data while the other half is from the caller. In the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69431,"byte_end":69522,"line_start":97,"line_end":97,"column_start":5,"column_end":96}},{"value":"/ above cases the number of frames respectively the size is determined by the file while the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69527,"byte_end":69621,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ number of calls","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69626,"byte_end":69645,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69650,"byte_end":69653,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If you're an application you might want to signal that a bug report is appreciated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69658,"byte_end":69745,"line_start":101,"line_end":101,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":70174,"byte_end":70188,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::decoder::stream::DecodingError::LimitsExceeded","value":"DecodingError::LimitsExceeded","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":" The image would have required exceeding the limits configured with the decoder.","sig":null,"attributes":[{"value":"/ The image would have required exceeding the limits configured with the decoder.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69781,"byte_end":69864,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69869,"byte_end":69872,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that Your allocations, e.g. when reading into a pre-allocated buffer, is __NOT__","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69877,"byte_end":69966,"line_start":105,"line_end":105,"column_start":5,"column_end":94}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":69971,"byte_end":70061,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":70066,"byte_end":70114,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":70119,"byte_end":70122,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":70127,"byte_end":70169,"line_start":109,"line_end":109,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68416,"byte_end":68429,"line_start":77,"line_end":77,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::decoder::stream::DecodingError","value":"pub enum DecodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569}],"decl_id":null,"docs":" Any kind of error during PNG decoding.","sig":null,"attributes":[{"value":"/ Any kind of error during PNG decoding.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68057,"byte_end":68099,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68100,"byte_end":68103,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This enumeration provides a very rough analysis on the origin of the failure. That is, each","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68104,"byte_end":68199,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ variant corresponds to one kind of actor causing the error. It should not be understood as a","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68200,"byte_end":68296,"line_start":74,"line_end":74,"column_start":1,"column_end":97}},{"value":"/ direct blame but can inform the search for a root cause or if such a search is required.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":68297,"byte_end":68389,"line_start":75,"line_end":75,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":70221,"byte_end":70232,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::decoder::stream::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80901,"byte_end":80917,"line_start":387,"line_end":387,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::decoder::stream::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" PNG StreamingDecoder (low-level interface)\n","sig":null,"attributes":[{"value":"/ PNG StreamingDecoder (low-level interface)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80843,"byte_end":80889,"line_start":386,"line_end":386,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81837,"byte_end":81840,"line_start":420,"line_end":420,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new StreamingDecoder","sig":null,"attributes":[{"value":"/ Creates a new StreamingDecoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81743,"byte_end":81777,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81782,"byte_end":81785,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Allocates the internal buffers.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81790,"byte_end":81825,"line_start":419,"line_end":419,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82226,"byte_end":82231,"line_start":433,"line_end":433,"column_start":12,"column_end":17},"name":"reset","qualname":"<StreamingDecoder>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the StreamingDecoder\n","sig":null,"attributes":[{"value":"/ Resets the StreamingDecoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82183,"byte_end":82214,"line_start":432,"line_end":432,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82680,"byte_end":82684,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"info","qualname":"<StreamingDecoder>::info","value":"pub fn info(&Self) -> Option<&Info>","parent":null,"children":[],"decl_id":null,"docs":" Provides access to the inner `info` field\n","sig":null,"attributes":[{"value":"/ Provides access to the inner `info` field","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82623,"byte_end":82668,"line_start":445,"line_end":445,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":83098,"byte_end":83104,"line_start":455,"line_end":455,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update(&mut Self, &[u8], &mut Vec<u8>)\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Low level StreamingDecoder interface.","sig":null,"attributes":[{"value":"/ Low level StreamingDecoder interface.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82758,"byte_end":82799,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82804,"byte_end":82807,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Allows to stream partial data to the encoder. Returns a tuple containing the bytes that have","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82812,"byte_end":82908,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ been consumed from the input buffer and the current decoding result. If the decoded chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":82913,"byte_end":83006,"line_start":453,"line_end":453,"column_start":5,"column_end":98}},{"value":"/ was an image data chunk, it also appends the read data to `image_data`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":83011,"byte_end":83086,"line_start":454,"line_end":454,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33258,"byte_end":33268,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"OutputInfo","qualname":"::decoder::OutputInfo","value":"OutputInfo { width, height, color_type, bit_depth, line_size }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"decl_id":null,"docs":" Output info.","sig":null,"attributes":[{"value":"/ Output info.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33100,"byte_end":33116,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33117,"byte_end":33120,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This describes one particular frame of the image that was written into the output buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33121,"byte_end":33214,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33318,"byte_end":33323,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"width","qualname":"::decoder::OutputInfo::width","value":"u32","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The pixel width of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel width of this frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33275,"byte_end":33309,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33378,"byte_end":33384,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"height","qualname":"::decoder::OutputInfo::height","value":"u32","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The pixel height of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel height of this frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33334,"byte_end":33369,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33437,"byte_end":33447,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"color_type","qualname":"::decoder::OutputInfo::color_type","value":"common::ColorType","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The chosen output color type.\n","sig":null,"attributes":[{"value":"/ The chosen output color type.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33395,"byte_end":33428,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33505,"byte_end":33514,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::decoder::OutputInfo::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The chosen output bit depth.\n","sig":null,"attributes":[{"value":"/ The chosen output bit depth.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33464,"byte_end":33496,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33589,"byte_end":33598,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"line_size","qualname":"::decoder::OutputInfo::line_size","value":"usize","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The byte count of each scan line in the image.\n","sig":null,"attributes":[{"value":"/ The byte count of each scan line in the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33530,"byte_end":33580,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33824,"byte_end":33835,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<OutputInfo>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size needed to hold a decoded frame\n If the output buffer was larger then bytes after this count should be ignored. They may\n still have been changed.\n","sig":null,"attributes":[{"value":"/ Returns the size needed to hold a decoded frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33632,"byte_end":33683,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ If the output buffer was larger then bytes after this count should be ignored. They may","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33688,"byte_end":33779,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ still have been changed.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33784,"byte_end":33812,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34011,"byte_end":34017,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"Limits","qualname":"::decoder::Limits","value":"Limits { bytes }","parent":null,"children":[{"krate":0,"index":1675}],"decl_id":null,"docs":" Limits on the resources the `Decoder` is allowed too use\n","sig":null,"attributes":[{"value":"/ Limits on the resources the `Decoder` is allowed too use","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33939,"byte_end":33999,"line_start":56,"line_end":56,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34113,"byte_end":34118,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"bytes","qualname":"::decoder::Limits::bytes","value":"usize","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" maximum number of bytes the decoder is allowed to allocate, default is 64Mib\n","sig":null,"attributes":[{"value":"/ maximum number of bytes the decoder is allowed to allocate, default is 64Mib","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34024,"byte_end":34104,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34285,"byte_end":34292,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" PNG Decoder\n","sig":null,"attributes":[{"value":"/ PNG Decoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34258,"byte_end":34273,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34569,"byte_end":34582,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"InterlacedRow","qualname":"::decoder::InterlacedRow","value":"InterlacedRow {  }","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":" A row of data with interlace information attached.\n","sig":null,"attributes":[{"value":"/ A row of data with interlace information attached.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34473,"byte_end":34527,"line_start":80,"line_end":80,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34694,"byte_end":34698,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"data","qualname":"<InterlacedRow>::data","value":"pub fn data(&Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34759,"byte_end":34768,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"interlace","qualname":"<InterlacedRow>::interlace","value":"pub fn interlace(&Self) -> InterlaceInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35009,"byte_end":35013,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Null","qualname":"::decoder::InterlaceInfo::Null","value":"InterlaceInfo::Null","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":" the null method means no interlacing\n","sig":null,"attributes":[{"value":"/ the null method means no interlacing","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34964,"byte_end":35004,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35447,"byte_end":35452,"line_start":113,"line_end":113,"column_start":5,"column_end":10},"name":"Adam7","qualname":"::decoder::InterlaceInfo::Adam7","value":"InterlaceInfo::Adam7 { pass, line, width }","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":" Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.\n The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","sig":null,"attributes":[{"value":"/ Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35019,"byte_end":35132,"line_start":102,"line_end":102,"column_start":5,"column_end":118}},{"value":"/ The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35137,"byte_end":35242,"line_start":103,"line_end":103,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35247,"byte_end":35250,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ 1 6 4 6 2 6 4 6","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35255,"byte_end":35274,"line_start":105,"line_end":105,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35279,"byte_end":35298,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35303,"byte_end":35322,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35327,"byte_end":35346,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/ 3 6 4 6 3 6 4 6","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35351,"byte_end":35370,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35375,"byte_end":35394,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35399,"byte_end":35418,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35423,"byte_end":35442,"line_start":112,"line_end":112,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34944,"byte_end":34957,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"InterlaceInfo","qualname":"::decoder::InterlaceInfo","value":"pub enum InterlaceInfo {\n    Null,\n    Adam7 {\n        pass: u8,\n        line: u32,\n        width: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1696}],"decl_id":null,"docs":" PNG (2003) specifies two interlace modes, but reserves future extensions.\n","sig":null,"attributes":[{"value":"/ PNG (2003) specifies two interlace modes, but reserves future extensions.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34827,"byte_end":34904,"line_start":97,"line_end":97,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35583,"byte_end":35586,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"Row","qualname":"::decoder::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":1707}],"decl_id":null,"docs":" A row of data without interlace information.\n","sig":null,"attributes":[{"value":"/ A row of data without interlace information.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35493,"byte_end":35541,"line_start":116,"line_end":116,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35658,"byte_end":35662,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"data","qualname":"<Row>::data","value":"pub fn data(&Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35816,"byte_end":35819,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with default limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with default limits.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35745,"byte_end":35804,"line_start":129,"line_end":129,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35978,"byte_end":35993,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"new_with_limits","qualname":"<Decoder<R>>::new_with_limits","value":"pub fn new_with_limits(R, Limits) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with custom limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with custom limits.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35908,"byte_end":35966,"line_start":134,"line_end":134,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37249,"byte_end":37259,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Decoder<R>>::set_limits","value":"pub fn set_limits(&mut Self, Limits)","parent":null,"children":[],"decl_id":null,"docs":" Limit resource usage.","sig":null,"attributes":[{"value":"/ Limit resource usage.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36156,"byte_end":36181,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36186,"byte_end":36189,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that your allocations, e.g. when reading into a pre-allocated buffer, are __NOT__","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36194,"byte_end":36284,"line_start":145,"line_end":145,"column_start":5,"column_end":95}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36289,"byte_end":36379,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36384,"byte_end":36432,"line_start":147,"line_end":147,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36437,"byte_end":36440,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36445,"byte_end":36487,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36492,"byte_end":36495,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36500,"byte_end":36507,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36512,"byte_end":36534,"line_start":152,"line_end":152,"column_start":5,"column_end":27}},{"value":"/ use png::{Decoder, Limits};","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36539,"byte_end":36570,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ // This image is 32×32, 1bit per pixel. The reader buffers one row which requires 4 bytes.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36575,"byte_end":36670,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36675,"byte_end":36714,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 3;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36719,"byte_end":36740,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36745,"byte_end":36852,"line_start":157,"line_end":157,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_err());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36857,"byte_end":36899,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36904,"byte_end":36907,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ // This image is 32x32 pixels, so the decoder will allocate less than 10Kib","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36912,"byte_end":36991,"line_start":160,"line_end":160,"column_start":5,"column_end":84}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":36996,"byte_end":37035,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 10*1024;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37040,"byte_end":37067,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37072,"byte_end":37179,"line_start":163,"line_end":163,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_ok());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37184,"byte_end":37225,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37230,"byte_end":37237,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37392,"byte_end":37401,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"pub fn read_info(Self) -> Result<Reader<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads all meta data until the first IDAT chunk\n","sig":null,"attributes":[{"value":"/ Reads all meta data until the first IDAT chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37330,"byte_end":37380,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":38035,"byte_end":38054,"line_start":187,"line_end":187,"column_start":12,"column_end":31},"name":"set_transformations","qualname":"<Decoder<R>>::set_transformations","value":"pub fn set_transformations(&mut Self, Transformations)","parent":null,"children":[],"decl_id":null,"docs":" Set the allowed and performed transformations.","sig":null,"attributes":[{"value":"/ Set the allowed and performed transformations.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37791,"byte_end":37841,"line_start":183,"line_end":183,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37846,"byte_end":37849,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ A transformation is a pre-processing on the raw image data modifying content or encoding.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37854,"byte_end":37947,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ Many options have an impact on memory or CPU usage during decoding.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":37952,"byte_end":38023,"line_start":186,"line_end":186,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":40350,"byte_end":40356,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"Reader","qualname":"::decoder::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" PNG reader (mostly high-level interface)","sig":null,"attributes":[{"value":"/ PNG reader (mostly high-level interface)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":40222,"byte_end":40266,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":40267,"byte_end":40270,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Provides a high level that iterates over lines or whole images.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":40271,"byte_end":40338,"line_start":255,"line_end":255,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":45955,"byte_end":45959,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"info","qualname":"<Reader<R>>::info","value":"pub fn info(&Self) -> &Info","parent":null,"children":[],"decl_id":null,"docs":" Get information on the image.","sig":null,"attributes":[{"value":"/ Get information on the image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":45820,"byte_end":45853,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":45858,"byte_end":45861,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The structure will change as new frames of an animated image are decoded.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":45866,"byte_end":45943,"line_start":416,"line_end":416,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48491,"byte_end":48501,"line_start":473,"line_end":473,"column_start":12,"column_end":22},"name":"next_frame","qualname":"<Reader<R>>::next_frame","value":"pub fn next_frame(&mut Self, &mut [u8]) -> Result<OutputInfo, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the next frame into `buf`.","sig":null,"attributes":[{"value":"/ Decodes the next frame into `buf`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47695,"byte_end":47733,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47738,"byte_end":47741,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Note that this decodes raw subframes that need to be mixed according to blend-op and","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47746,"byte_end":47834,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"/ dispose-op by the caller.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47839,"byte_end":47868,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47873,"byte_end":47876,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The caller must always provide a buffer large enough to hold a complete frame (the APNG","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47881,"byte_end":47972,"line_start":465,"line_end":465,"column_start":5,"column_end":96}},{"value":"/ specification restricts subframes to the dimensions given in the image header). The region","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":47977,"byte_end":48071,"line_start":466,"line_end":466,"column_start":5,"column_end":99}},{"value":"/ that has been written be checked afterwards by calling `info` after a successful call and","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48076,"byte_end":48169,"line_start":467,"line_end":467,"column_start":5,"column_end":98}},{"value":"/ inspecting the `frame_control` data. This requirement may be lifted in a later version of","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48174,"byte_end":48267,"line_start":468,"line_end":468,"column_start":5,"column_end":98}},{"value":"/ `png`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48272,"byte_end":48282,"line_start":469,"line_end":469,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48287,"byte_end":48290,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Output lines will be written in row-major, packed matrix with width and height of the read","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48295,"byte_end":48389,"line_start":471,"line_end":471,"column_start":5,"column_end":99}},{"value":"/ frame (or subframe), all samples are in big endian byte order where this matters.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":48394,"byte_end":48479,"line_start":472,"line_end":472,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":50300,"byte_end":50308,"line_start":521,"line_end":521,"column_start":12,"column_end":20},"name":"next_row","qualname":"<Reader<R>>::next_row","value":"pub fn next_row(&mut Self) -> Result<Option<Row>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":50241,"byte_end":50288,"line_start":520,"line_end":520,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":50519,"byte_end":50538,"line_start":527,"line_end":527,"column_start":12,"column_end":31},"name":"next_interlaced_row","qualname":"<Reader<R>>::next_interlaced_row","value":"pub fn next_interlaced_row(&mut Self)\n-> Result<Option<InterlacedRow>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":50460,"byte_end":50507,"line_start":526,"line_end":526,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":53437,"byte_end":53454,"line_start":607,"line_end":607,"column_start":12,"column_end":29},"name":"output_color_type","qualname":"<Reader<R>>::output_color_type","value":"pub fn output_color_type(&Self) -> (ColorType, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type and the number of bits per sample\n of the data returned by `Reader::next_row` and Reader::frames`.\n","sig":null,"attributes":[{"value":"/ Returns the color type and the number of bits per sample","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":53293,"byte_end":53353,"line_start":605,"line_end":605,"column_start":5,"column_end":65}},{"value":"/ of the data returned by `Reader::next_row` and Reader::frames`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":53358,"byte_end":53425,"line_start":606,"line_end":606,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":54631,"byte_end":54649,"line_start":637,"line_end":637,"column_start":12,"column_end":30},"name":"output_buffer_size","qualname":"<Reader<R>>::output_buffer_size","value":"pub fn output_buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced image frame\n that is decoded using the given input transformations.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced image frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":54481,"byte_end":54556,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/ that is decoded using the given input transformations.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":54561,"byte_end":54619,"line_start":636,"line_end":636,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":55714,"byte_end":55730,"line_start":666,"line_end":666,"column_start":12,"column_end":28},"name":"output_line_size","qualname":"<Reader<R>>::output_line_size","value":"pub fn output_line_size(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced row.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":55634,"byte_end":55702,"line_start":665,"line_end":665,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":134970,"byte_end":134977,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"IoError","qualname":"::encoder::EncodingError::IoError","value":"EncodingError::IoError(io::Error)","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":134994,"byte_end":135000,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(FormatError)","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135019,"byte_end":135028,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::encoder::EncodingError::Parameter","value":"EncodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135050,"byte_end":135064,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::encoder::EncodingError::LimitsExceeded","value":"EncodingError::LimitsExceeded","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":134950,"byte_end":134963,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"pub enum EncodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135097,"byte_end":135108,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::encoder::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139012,"byte_end":139019,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" PNG Encoder.","sig":null,"attributes":[{"value":"/ PNG Encoder.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138676,"byte_end":138692,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138693,"byte_end":138696,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This configures the PNG format options such as animation chunks, palette use, color types,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138697,"byte_end":138791,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ auxiliary chunks etc.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138792,"byte_end":138817,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138818,"byte_end":138821,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ FIXME: Configuring APNG might be easier (less individual errors) if we had an _adapter_ which","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138822,"byte_end":138919,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/ borrows this mutably but guarantees that `info.frame_control` is not `None`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138920,"byte_end":139000,"line_start":147,"line_end":147,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139356,"byte_end":139359,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(W, u32, u32) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140213,"byte_end":140225,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"set_animated","qualname":"<Encoder>::set_animated","value":"pub fn set_animated(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Specify that the image is animated.","sig":null,"attributes":[{"value":"/ Specify that the image is animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139561,"byte_end":139600,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139605,"byte_end":139608,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ `num_frames` controls how many frames the animation has, while","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139613,"byte_end":139679,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ `num_plays` controls how many times the animation should be","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139684,"byte_end":139747,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/ repeated until it stops, if it's zero then it will repeat","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139752,"byte_end":139813,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ infinitely.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139818,"byte_end":139833,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139838,"byte_end":139841,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When this method is returns successfully then the images written will be encoded as fdAT","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139846,"byte_end":139938,"line_start":179,"line_end":179,"column_start":5,"column_end":97}},{"value":"/ chunks, except for the first image that is still encoded as `IDAT`. You can control if the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139943,"byte_end":140037,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ first frame should be treated as an animation frame with [`Encoder::set_sep_def_img()`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140042,"byte_end":140134,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140139,"byte_end":140142,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if `num_frames` is 0.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140147,"byte_end":140201,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141401,"byte_end":141416,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"set_sep_def_img","qualname":"<Encoder>::set_sep_def_img","value":"pub fn set_sep_def_img(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark the first animated frame as a 'separate default image'.","sig":null,"attributes":[{"value":"/ Mark the first animated frame as a 'separate default image'.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140813,"byte_end":140877,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140882,"byte_end":140885,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ In APNG each animated frame is preceded by a special control chunk, `fcTL`. It's up to the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140890,"byte_end":140984,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ encoder to decide if the first image, the standard `IDAT` data, should be part of the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":140989,"byte_end":141078,"line_start":209,"line_end":209,"column_start":5,"column_end":94}},{"value":"/ animation by emitting this chunk or by not doing so. A default image that is _not_ part of","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141083,"byte_end":141177,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ the animation is often interpreted as a thumbnail.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141182,"byte_end":141236,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141241,"byte_end":141244,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This method will return an error when animation control was not configured","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141249,"byte_end":141327,"line_start":213,"line_end":213,"column_start":5,"column_end":83}},{"value":"/ (which is done by calling [`Encoder::set_animated`]).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141332,"byte_end":141389,"line_start":214,"line_end":214,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141823,"byte_end":141834,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"set_palette","qualname":"<Encoder>::set_palette","value":"pub fn set_palette<T: Into<Cow>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the PLTE chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the PLTE chunk. This method accepts","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141699,"byte_end":141768,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141773,"byte_end":141811,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142069,"byte_end":142077,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"set_trns","qualname":"<Encoder>::set_trns","value":"pub fn set_trns<T: Into<Cow>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the tRNS chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the tRNS chunk. This method accepts","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":141945,"byte_end":142014,"line_start":230,"line_end":230,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142019,"byte_end":142057,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142286,"byte_end":142302,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"set_source_gamma","qualname":"<Encoder>::set_source_gamma","value":"pub fn set_source_gamma(&mut Self, ScaledFloat)","parent":null,"children":[],"decl_id":null,"docs":" Set the display gamma of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the display gamma of the source system on which the image was generated or last edited.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142179,"byte_end":142274,"line_start":236,"line_end":236,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142602,"byte_end":142627,"line_start":243,"line_end":243,"column_start":12,"column_end":37},"name":"set_source_chromaticities","qualname":"<Encoder>::set_source_chromaticities","value":"pub fn set_source_chromaticities(&mut Self, super::SourceChromaticities)","parent":null,"children":[],"decl_id":null,"docs":" Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint\n of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142407,"byte_end":142512,"line_start":241,"line_end":241,"column_start":5,"column_end":110}},{"value":"/ of the source system on which the image was generated or last edited.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142517,"byte_end":142590,"line_start":242,"line_end":242,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143076,"byte_end":143084,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<Encoder>::set_srgb","value":"pub fn set_srgb(&mut Self, super::SrgbRenderingIntent)","parent":null,"children":[],"decl_id":null,"docs":" Mark the image data as conforming to the SRGB color space with the specified rendering intent.","sig":null,"attributes":[{"value":"/ Mark the image data as conforming to the SRGB color space with the specified rendering intent.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142798,"byte_end":142896,"line_start":250,"line_end":250,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142901,"byte_end":142904,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Matching source gamma and chromaticities chunks are added automatically.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142909,"byte_end":142985,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ Any manually specified source gamma or chromaticities will be ignored.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":142990,"byte_end":143064,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143352,"byte_end":143364,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"write_header","qualname":"<Encoder>::write_header","value":"pub fn write_header(Self) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Start encoding by writing the header data.","sig":null,"attributes":[{"value":"/ Start encoding by writing the header data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143204,"byte_end":143250,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143255,"byte_end":143258,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The remaining data can be supplied by methods on the returned [`Writer`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143263,"byte_end":143340,"line_start":260,"line_end":260,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143771,"byte_end":143780,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Encoder>::set_color","value":"pub fn set_color(&mut Self, ColorType)","parent":null,"children":[],"decl_id":null,"docs":" Set the color of the encoded image.","sig":null,"attributes":[{"value":"/ Set the color of the encoded image.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143494,"byte_end":143533,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143538,"byte_end":143541,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ These correspond to the color types in the png IHDR data that will be written. The length","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143546,"byte_end":143639,"line_start":267,"line_end":267,"column_start":5,"column_end":98}},{"value":"/ of the image data that is later supplied must match the color type, otherwise an error will","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143644,"byte_end":143739,"line_start":268,"line_end":268,"column_start":5,"column_end":100}},{"value":"/ be emitted.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143744,"byte_end":143759,"line_start":269,"line_end":269,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143919,"byte_end":143928,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"set_depth","qualname":"<Encoder>::set_depth","value":"pub fn set_depth(&mut Self, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Set the indicated depth of the image data.\n","sig":null,"attributes":[{"value":"/ Set the indicated depth of the image data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":143861,"byte_end":143907,"line_start":274,"line_end":274,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144235,"byte_end":144250,"line_start":283,"line_end":283,"column_start":12,"column_end":27},"name":"set_compression","qualname":"<Encoder>::set_compression","value":"pub fn set_compression(&mut Self, Compression)","parent":null,"children":[],"decl_id":null,"docs":" Set compression parameters.","sig":null,"attributes":[{"value":"/ Set compression parameters.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144007,"byte_end":144038,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144043,"byte_end":144046,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Accepts a `Compression` or any type that can transform into a `Compression`. Notably `deflate::Compression` and","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144051,"byte_end":144166,"line_start":281,"line_end":281,"column_start":5,"column_end":120}},{"value":"/ `deflate::CompressionOptions` which \"just work\".","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144171,"byte_end":144223,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144797,"byte_end":144807,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Encoder>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type.","sig":null,"attributes":[{"value":"/ Set the used filter type.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144346,"byte_end":144375,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144380,"byte_end":144383,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144388,"byte_end":144481,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144486,"byte_end":144577,"line_start":290,"line_end":290,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144582,"byte_end":144649,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144654,"byte_end":144657,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144662,"byte_end":144719,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144724,"byte_end":144785,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145303,"byte_end":145322,"line_start":307,"line_end":307,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Encoder>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144890,"byte_end":144923,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144928,"byte_end":144931,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":144936,"byte_end":145007,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145012,"byte_end":145087,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145092,"byte_end":145164,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145169,"byte_end":145209,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145214,"byte_end":145217,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145222,"byte_end":145291,"line_start":306,"line_end":306,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146419,"byte_end":146434,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Encoder>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time every frame is going to be displayed, in seconds.","sig":null,"attributes":[{"value":"/ Set the fraction of time every frame is going to be displayed, in seconds.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145440,"byte_end":145518,"line_start":311,"line_end":311,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145523,"byte_end":145526,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145531,"byte_end":145603,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ [`Encoder::write_header`] is called. (see [`Writer::set_frame_delay`])*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145608,"byte_end":145683,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145688,"byte_end":145691,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145696,"byte_end":145762,"line_start":316,"line_end":316,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145767,"byte_end":145832,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145837,"byte_end":145920,"line_start":318,"line_end":318,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":145925,"byte_end":146004,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146009,"byte_end":146012,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The default value is 0 for both the numerator and denominator.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146017,"byte_end":146083,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146088,"byte_end":146091,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146096,"byte_end":146162,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146167,"byte_end":146193,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146198,"byte_end":146201,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146206,"byte_end":146267,"line_start":326,"line_end":326,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146272,"byte_end":146333,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_frame_delay`]: struct.Writer#method.set_frame_delay","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146338,"byte_end":146407,"line_start":328,"line_end":328,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147952,"byte_end":147964,"line_start":364,"line_end":364,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Encoder>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for every frame.","sig":null,"attributes":[{"value":"/ Set the blend operation for every frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146773,"byte_end":146817,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146822,"byte_end":146825,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146830,"byte_end":146904,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146909,"byte_end":146984,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":146989,"byte_end":147033,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147038,"byte_end":147041,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147046,"byte_end":147118,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called. (see [`Writer::set_blend_op`])*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147123,"byte_end":147186,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147191,"byte_end":147194,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147199,"byte_end":147279,"line_start":348,"line_end":348,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147284,"byte_end":147287,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147292,"byte_end":147363,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147368,"byte_end":147440,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147445,"byte_end":147463,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147468,"byte_end":147471,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The default value is [`BlendOp::Source`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147476,"byte_end":147521,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147526,"byte_end":147529,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147534,"byte_end":147600,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147605,"byte_end":147631,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147636,"byte_end":147639,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147644,"byte_end":147678,"line_start":359,"line_end":359,"column_start":5,"column_end":39}},{"value":"/ [`BlendOP::Source`]: enum.BlendOp.html#variant.Source","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147683,"byte_end":147740,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147745,"byte_end":147806,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147811,"byte_end":147872,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_blend_op`]: struct.Writer#method.set_blend_op","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":147877,"byte_end":147940,"line_start":363,"line_end":363,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149487,"byte_end":149501,"line_start":398,"line_end":398,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Encoder>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for every frame.","sig":null,"attributes":[{"value":"/ Set the dispose operation for every frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148232,"byte_end":148278,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148283,"byte_end":148286,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148291,"byte_end":148366,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148371,"byte_end":148432,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148437,"byte_end":148440,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148445,"byte_end":148517,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called (see [`Writer::set_dispose_op`])*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148522,"byte_end":148586,"line_start":379,"line_end":379,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148591,"byte_end":148594,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148599,"byte_end":148681,"line_start":381,"line_end":381,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148686,"byte_end":148689,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148694,"byte_end":148756,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148761,"byte_end":148814,"line_start":384,"line_end":384,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148819,"byte_end":148822,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The default value is [`DisposeOp::None`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148827,"byte_end":148872,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148877,"byte_end":148880,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148885,"byte_end":148951,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148956,"byte_end":148982,"line_start":389,"line_end":389,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148987,"byte_end":148990,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":148995,"byte_end":149041,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149046,"byte_end":149119,"line_start":392,"line_end":392,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149124,"byte_end":149201,"line_start":393,"line_end":393,"column_start":5,"column_end":82}},{"value":"/ [`DisposeOp::None`]: ../common/enum.BlendOp.html#variant.None","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149206,"byte_end":149271,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149276,"byte_end":149337,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149342,"byte_end":149403,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_dispose_op`]: struct.Writer#method.set_dispose_op","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149408,"byte_end":149475,"line_start":397,"line_end":397,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149847,"byte_end":149861,"line_start":408,"line_end":408,"column_start":12,"column_end":26},"name":"add_text_chunk","qualname":"<Encoder>::add_text_chunk","value":"pub fn add_text_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add tEXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add tEXt chunks to [`Info`] struct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":149773,"byte_end":149835,"line_start":407,"line_end":407,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150137,"byte_end":150151,"line_start":415,"line_end":415,"column_start":12,"column_end":26},"name":"add_ztxt_chunk","qualname":"<Encoder>::add_ztxt_chunk","value":"pub fn add_ztxt_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add zTXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add zTXt chunks to [`Info`] struct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150063,"byte_end":150125,"line_start":414,"line_end":414,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150622,"byte_end":150636,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"add_itxt_chunk","qualname":"<Encoder>::add_itxt_chunk","value":"pub fn add_itxt_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add iTXt chunks to [`Info`] struct","sig":null,"attributes":[{"value":"/ Convenience function to add iTXt chunks to [`Info`] struct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150351,"byte_end":150413,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150418,"byte_end":150421,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function only sets the `keyword` and `text` field of the iTXt chunk.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150426,"byte_end":150503,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ To set the other fields, create a [`ITXtChunk`] directly, and then encode it to the output stream.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150508,"byte_end":150610,"line_start":424,"line_end":424,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151371,"byte_end":151388,"line_start":441,"line_end":441,"column_start":12,"column_end":29},"name":"validate_sequence","qualname":"<Encoder>::validate_sequence","value":"pub fn validate_sequence(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Validate the written image sequence.","sig":null,"attributes":[{"value":"/ Validate the written image sequence.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150823,"byte_end":150863,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150868,"byte_end":150871,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ When validation is turned on (it's turned off by default) then attempts to write more than","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150876,"byte_end":150970,"line_start":433,"line_end":433,"column_start":5,"column_end":99}},{"value":"/ one `IDAT` image or images beyond the number of frames indicated in the animation control","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":150975,"byte_end":151068,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ chunk will fail and return an error result instead. Attempts to [finish][finish] the image","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151073,"byte_end":151167,"line_start":435,"line_end":435,"column_start":5,"column_end":99}},{"value":"/ with missing frames will also return an error.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151172,"byte_end":151222,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151227,"byte_end":151230,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [finish]: StreamWriter::finish","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151235,"byte_end":151269,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151274,"byte_end":151277,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ (It's possible to circumvent these checks by writing raw chunks instead.)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151282,"byte_end":151359,"line_start":440,"line_end":440,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151919,"byte_end":151925,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"Writer","qualname":"::encoder::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"decl_id":null,"docs":" PNG writer","sig":null,"attributes":[{"value":"/ PNG writer","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151478,"byte_end":151492,"line_start":446,"line_end":446,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151493,"byte_end":151496,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ Progresses through the image by writing images, frames, or raw individual chunks. This is","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151497,"byte_end":151590,"line_start":448,"line_end":448,"column_start":1,"column_end":94}},{"value":"/ constructed through [`Encoder::write_header()`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151591,"byte_end":151643,"line_start":449,"line_end":449,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151644,"byte_end":151647,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ FIXME: Writing of animated chunks might be clearer if we had an _adapter_ that you would call","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151648,"byte_end":151745,"line_start":451,"line_end":451,"column_start":1,"column_end":98}},{"value":"/ to guarantee the next image to be prefaced with a fcTL-chunk, and all other chunks would be","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151746,"byte_end":151841,"line_start":452,"line_end":452,"column_start":1,"column_end":96}},{"value":"/ guaranteed to be `IDAT`/not affected by APNG's frame control.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":151842,"byte_end":151907,"line_start":453,"line_end":453,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":155824,"byte_end":155835,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<Writer<W>>::write_chunk","value":"pub fn write_chunk(&mut Self, ChunkType, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a raw chunk of PNG data.","sig":null,"attributes":[{"value":"/ Write a raw chunk of PNG data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":155586,"byte_end":155620,"line_start":578,"line_end":578,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":155625,"byte_end":155628,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The chunk will have its CRC calculated and correctly. The data is not filtered in any way,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":155633,"byte_end":155727,"line_start":580,"line_end":580,"column_start":5,"column_end":99}},{"value":"/ but the chunk needs to be short enough to have its length encoded correctly.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":155732,"byte_end":155812,"line_start":581,"line_end":581,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":156238,"byte_end":156254,"line_start":593,"line_end":593,"column_start":12,"column_end":28},"name":"write_text_chunk","qualname":"<Writer<W>>::write_text_chunk","value":"pub fn write_text_chunk<T: EncodableTextChunk>(&mut Self, &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":157706,"byte_end":157722,"line_start":640,"line_end":640,"column_start":12,"column_end":28},"name":"write_image_data","qualname":"<Writer<W>>::write_image_data","value":"pub fn write_image_data(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next image data.\n","sig":null,"attributes":[{"value":"/ Writes the next image data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":157663,"byte_end":157694,"line_start":639,"line_end":639,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162295,"byte_end":162305,"line_start":756,"line_end":756,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Writer<W>>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the used filter type for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":161819,"byte_end":161873,"line_start":748,"line_end":748,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":161878,"byte_end":161881,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":161886,"byte_end":161979,"line_start":750,"line_end":750,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":161984,"byte_end":162075,"line_start":751,"line_end":751,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162080,"byte_end":162147,"line_start":752,"line_end":752,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162152,"byte_end":162155,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162160,"byte_end":162217,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162222,"byte_end":162283,"line_start":755,"line_end":755,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162826,"byte_end":162845,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Writer<W>>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162388,"byte_end":162446,"line_start":760,"line_end":760,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162451,"byte_end":162454,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162459,"byte_end":162530,"line_start":762,"line_end":762,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162535,"byte_end":162610,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162615,"byte_end":162687,"line_start":764,"line_end":764,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162692,"byte_end":162732,"line_start":765,"line_end":765,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162737,"byte_end":162740,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162745,"byte_end":162814,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163470,"byte_end":163485,"line_start":781,"line_end":781,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Writer<W>>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":162963,"byte_end":163039,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163044,"byte_end":163058,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163063,"byte_end":163066,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163071,"byte_end":163137,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163142,"byte_end":163207,"line_start":776,"line_end":776,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163212,"byte_end":163295,"line_start":777,"line_end":777,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163300,"byte_end":163379,"line_start":778,"line_end":778,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163384,"byte_end":163387,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163392,"byte_end":163458,"line_start":780,"line_end":780,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":164242,"byte_end":164261,"line_start":803,"line_end":803,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<Writer<W>>::set_frame_dimension","value":"pub fn set_frame_dimension(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163824,"byte_end":163870,"line_start":791,"line_end":791,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163875,"byte_end":163878,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163883,"byte_end":163927,"line_start":793,"line_end":793,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163932,"byte_end":163967,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163972,"byte_end":163975,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":163980,"byte_end":164054,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":164059,"byte_end":164099,"line_start":797,"line_end":797,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":164104,"byte_end":164107,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":164112,"byte_end":164157,"line_start":799,"line_end":799,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":164162,"byte_end":164165,"line_start":800,"line_end":800,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165430,"byte_end":165448,"line_start":832,"line_end":832,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<Writer<W>>::set_frame_position","value":"pub fn set_frame_position(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165085,"byte_end":165130,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165135,"byte_end":165138,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165143,"byte_end":165176,"line_start":824,"line_end":824,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165181,"byte_end":165213,"line_start":825,"line_end":825,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165218,"byte_end":165221,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165226,"byte_end":165300,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165305,"byte_end":165345,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":165350,"byte_end":165353,"line_start":829,"line_end":829,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166392,"byte_end":166413,"line_start":856,"line_end":856,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<Writer<W>>::reset_frame_dimension","value":"pub fn reset_frame_dimension(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166001,"byte_end":166067,"line_start":847,"line_end":847,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166072,"byte_end":166097,"line_start":848,"line_end":848,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166102,"byte_end":166105,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166110,"byte_end":166180,"line_start":850,"line_end":850,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166185,"byte_end":166212,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166217,"byte_end":166220,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166225,"byte_end":166291,"line_start":853,"line_end":853,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166296,"byte_end":166299,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166304,"byte_end":166380,"line_start":855,"line_end":855,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167041,"byte_end":167061,"line_start":873,"line_end":873,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<Writer<W>>::reset_frame_position","value":"pub fn reset_frame_position(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166754,"byte_end":166791,"line_start":866,"line_end":866,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166796,"byte_end":166799,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166804,"byte_end":166859,"line_start":868,"line_end":868,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166864,"byte_end":166867,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166872,"byte_end":166938,"line_start":870,"line_end":870,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166943,"byte_end":166946,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":166951,"byte_end":167029,"line_start":872,"line_end":872,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168030,"byte_end":168042,"line_start":898,"line_end":898,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Writer<W>>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167346,"byte_end":167399,"line_start":883,"line_end":883,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167404,"byte_end":167407,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167412,"byte_end":167486,"line_start":885,"line_end":885,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167491,"byte_end":167566,"line_start":886,"line_end":886,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167571,"byte_end":167615,"line_start":887,"line_end":887,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167620,"byte_end":167623,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167628,"byte_end":167708,"line_start":889,"line_end":889,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167713,"byte_end":167716,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167721,"byte_end":167792,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167797,"byte_end":167869,"line_start":892,"line_end":892,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167874,"byte_end":167892,"line_start":893,"line_end":893,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167897,"byte_end":167900,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167905,"byte_end":167971,"line_start":895,"line_end":895,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167976,"byte_end":167979,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":167984,"byte_end":168018,"line_start":897,"line_end":897,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169057,"byte_end":169071,"line_start":922,"line_end":922,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Writer<W>>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168310,"byte_end":168365,"line_start":907,"line_end":907,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168370,"byte_end":168373,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168378,"byte_end":168453,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168458,"byte_end":168519,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168524,"byte_end":168527,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168532,"byte_end":168614,"line_start":912,"line_end":912,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168619,"byte_end":168622,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168627,"byte_end":168689,"line_start":914,"line_end":914,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168694,"byte_end":168747,"line_start":915,"line_end":915,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168752,"byte_end":168755,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168760,"byte_end":168826,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168831,"byte_end":168834,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168839,"byte_end":168885,"line_start":919,"line_end":919,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168890,"byte_end":168963,"line_start":920,"line_end":920,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":168968,"byte_end":169045,"line_start":921,"line_end":921,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169702,"byte_end":169715,"line_start":939,"line_end":939,"column_start":12,"column_end":25},"name":"stream_writer","qualname":"<Writer<W>>::stream_writer","value":"pub fn stream_writer(&mut Self) -> Result<StreamWriter<, W>>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer.","sig":null,"attributes":[{"value":"/ Create a stream writer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169343,"byte_end":169370,"line_start":931,"line_end":931,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169375,"byte_end":169378,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169383,"byte_end":169458,"line_start":933,"line_end":933,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169463,"byte_end":169535,"line_start":934,"line_end":934,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169540,"byte_end":169549,"line_start":935,"line_end":935,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169554,"byte_end":169557,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ This borrows the writer which allows for manually appending additional","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169562,"byte_end":169636,"line_start":937,"line_end":937,"column_start":5,"column_end":79}},{"value":"/ chunks after the image data has been written.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169641,"byte_end":169690,"line_start":938,"line_end":938,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169982,"byte_end":170005,"line_start":948,"line_end":948,"column_start":12,"column_end":35},"name":"stream_writer_with_size","qualname":"<Writer<W>>::stream_writer_with_size","value":"pub fn stream_writer_with_size(&mut Self, usize) -> Result<StreamWriter<, W>>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Create a stream writer with custom buffer size.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169827,"byte_end":169878,"line_start":943,"line_end":943,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169883,"byte_end":169886,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ See [`stream_writer`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169891,"byte_end":169917,"line_start":945,"line_end":945,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169922,"byte_end":169925,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ [`stream_writer`]: #fn.stream_writer","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":169930,"byte_end":169970,"line_start":947,"line_end":947,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170372,"byte_end":170390,"line_start":957,"line_end":957,"column_start":12,"column_end":30},"name":"into_stream_writer","qualname":"<Writer<W>>::into_stream_writer","value":"pub fn into_stream_writer(Self) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer for image data.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer for image data.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170131,"byte_end":170181,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170186,"byte_end":170189,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170194,"byte_end":170269,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170274,"byte_end":170346,"line_start":955,"line_end":955,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170351,"byte_end":170360,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170689,"byte_end":170717,"line_start":966,"line_end":966,"column_start":12,"column_end":40},"name":"into_stream_writer_with_size","qualname":"<Writer<W>>::into_stream_writer_with_size","value":"pub fn into_stream_writer_with_size(Self, usize) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer with custom buffer size.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170511,"byte_end":170570,"line_start":961,"line_end":961,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170575,"byte_end":170578,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ See [`into_stream_writer`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170583,"byte_end":170614,"line_start":963,"line_end":963,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170619,"byte_end":170622,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ [`into_stream_writer`]: #fn.into_stream_writer","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170627,"byte_end":170677,"line_start":965,"line_end":965,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171185,"byte_end":171191,"line_start":975,"line_end":975,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer<W>>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consume the stream writer with validation.","sig":null,"attributes":[{"value":"/ Consume the stream writer with validation.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170844,"byte_end":170890,"line_start":970,"line_end":970,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170895,"byte_end":170898,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Unlike a simple drop this ensures that the final chunk was written correctly. When other","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":170903,"byte_end":170995,"line_start":972,"line_end":972,"column_start":5,"column_end":97}},{"value":"/ validation options (chunk sequencing) had been turned on in the configuration then it will","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171000,"byte_end":171094,"line_start":973,"line_end":973,"column_start":5,"column_end":99}},{"value":"/ also do a check on their correctness _before_ writing the final chunk.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171099,"byte_end":171173,"line_start":974,"line_end":974,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179456,"byte_end":179468,"line_start":1234,"line_end":1234,"column_start":12,"column_end":24},"name":"StreamWriter","qualname":"::encoder::StreamWriter","value":"StreamWriter {  }","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Streaming PNG writer","sig":null,"attributes":[{"value":"/ Streaming PNG writer","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179189,"byte_end":179213,"line_start":1228,"line_end":1228,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179214,"byte_end":179217,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ This may silently fail in the destructor, so it is a good idea to call","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179218,"byte_end":179292,"line_start":1230,"line_end":1230,"column_start":1,"column_end":75}},{"value":"/ [`finish`](#method.finish) or [`flush`] before dropping.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179293,"byte_end":179353,"line_start":1231,"line_end":1231,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179354,"byte_end":179357,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ [`flush`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html#tymethod.flush","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":179358,"byte_end":179444,"line_start":1233,"line_end":1233,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181766,"byte_end":181776,"line_start":1304,"line_end":1304,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<StreamWriter>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the used filter type for the next frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181296,"byte_end":181344,"line_start":1296,"line_end":1296,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181349,"byte_end":181352,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181357,"byte_end":181450,"line_start":1298,"line_end":1298,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181455,"byte_end":181546,"line_start":1299,"line_end":1299,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181551,"byte_end":181618,"line_start":1300,"line_end":1300,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181623,"byte_end":181626,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181631,"byte_end":181688,"line_start":1302,"line_end":1302,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181693,"byte_end":181754,"line_start":1303,"line_end":1303,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182283,"byte_end":182302,"line_start":1316,"line_end":1316,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<StreamWriter>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the next frame.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181851,"byte_end":181903,"line_start":1308,"line_end":1308,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181908,"byte_end":181911,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181916,"byte_end":181987,"line_start":1310,"line_end":1310,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":181992,"byte_end":182067,"line_start":1311,"line_end":1311,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182072,"byte_end":182144,"line_start":1312,"line_end":1312,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182149,"byte_end":182189,"line_start":1313,"line_end":1313,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182194,"byte_end":182197,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182202,"byte_end":182271,"line_start":1315,"line_end":1315,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182919,"byte_end":182934,"line_start":1329,"line_end":1329,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<StreamWriter>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182412,"byte_end":182488,"line_start":1320,"line_end":1320,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182493,"byte_end":182507,"line_start":1321,"line_end":1321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182512,"byte_end":182515,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182520,"byte_end":182586,"line_start":1323,"line_end":1323,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182591,"byte_end":182656,"line_start":1324,"line_end":1324,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182661,"byte_end":182744,"line_start":1325,"line_end":1325,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182749,"byte_end":182828,"line_start":1326,"line_end":1326,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182833,"byte_end":182836,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":182841,"byte_end":182907,"line_start":1328,"line_end":1328,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183612,"byte_end":183631,"line_start":1349,"line_end":1349,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<StreamWriter>::set_frame_dimension","value":"pub fn set_frame_dimension(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183259,"byte_end":183305,"line_start":1339,"line_end":1339,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183310,"byte_end":183313,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183318,"byte_end":183362,"line_start":1341,"line_end":1341,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183367,"byte_end":183402,"line_start":1342,"line_end":1342,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183407,"byte_end":183410,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183415,"byte_end":183489,"line_start":1344,"line_end":1344,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183494,"byte_end":183534,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183539,"byte_end":183542,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183547,"byte_end":183592,"line_start":1347,"line_end":1347,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":183597,"byte_end":183600,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184711,"byte_end":184729,"line_start":1376,"line_end":1376,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<StreamWriter>::set_frame_position","value":"pub fn set_frame_position(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184431,"byte_end":184476,"line_start":1368,"line_end":1368,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184481,"byte_end":184484,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184489,"byte_end":184522,"line_start":1370,"line_end":1370,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184527,"byte_end":184559,"line_start":1371,"line_end":1371,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184564,"byte_end":184567,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184572,"byte_end":184646,"line_start":1373,"line_end":1373,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184651,"byte_end":184691,"line_start":1374,"line_end":1374,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":184696,"byte_end":184699,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185649,"byte_end":185670,"line_start":1400,"line_end":1400,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<StreamWriter>::reset_frame_dimension","value":"pub fn reset_frame_dimension(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185258,"byte_end":185324,"line_start":1391,"line_end":1391,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185329,"byte_end":185354,"line_start":1392,"line_end":1392,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185359,"byte_end":185362,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185367,"byte_end":185437,"line_start":1394,"line_end":1394,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185442,"byte_end":185469,"line_start":1395,"line_end":1395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185474,"byte_end":185477,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185482,"byte_end":185548,"line_start":1397,"line_end":1397,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185553,"byte_end":185556,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185561,"byte_end":185637,"line_start":1399,"line_end":1399,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186274,"byte_end":186294,"line_start":1417,"line_end":1417,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<StreamWriter>::reset_frame_position","value":"pub fn reset_frame_position(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":185987,"byte_end":186024,"line_start":1410,"line_end":1410,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186029,"byte_end":186032,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186037,"byte_end":186092,"line_start":1412,"line_end":1412,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186097,"byte_end":186100,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186105,"byte_end":186171,"line_start":1414,"line_end":1414,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186176,"byte_end":186179,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186184,"byte_end":186262,"line_start":1416,"line_end":1416,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187249,"byte_end":187261,"line_start":1442,"line_end":1442,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<StreamWriter>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186565,"byte_end":186618,"line_start":1427,"line_end":1427,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186623,"byte_end":186626,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186631,"byte_end":186705,"line_start":1429,"line_end":1429,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186710,"byte_end":186785,"line_start":1430,"line_end":1430,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186790,"byte_end":186834,"line_start":1431,"line_end":1431,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186839,"byte_end":186842,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186847,"byte_end":186927,"line_start":1433,"line_end":1433,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186932,"byte_end":186935,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":186940,"byte_end":187011,"line_start":1435,"line_end":1435,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187016,"byte_end":187088,"line_start":1436,"line_end":1436,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187093,"byte_end":187111,"line_start":1437,"line_end":1437,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187116,"byte_end":187119,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187124,"byte_end":187190,"line_start":1439,"line_end":1439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187195,"byte_end":187198,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187203,"byte_end":187237,"line_start":1441,"line_end":1441,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188262,"byte_end":188276,"line_start":1466,"line_end":1466,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<StreamWriter>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187515,"byte_end":187570,"line_start":1451,"line_end":1451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187575,"byte_end":187578,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187583,"byte_end":187658,"line_start":1453,"line_end":1453,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187663,"byte_end":187724,"line_start":1454,"line_end":1454,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187729,"byte_end":187732,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187737,"byte_end":187819,"line_start":1456,"line_end":1456,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187824,"byte_end":187827,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187832,"byte_end":187894,"line_start":1458,"line_end":1458,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187899,"byte_end":187952,"line_start":1459,"line_end":1459,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187957,"byte_end":187960,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":187965,"byte_end":188031,"line_start":1461,"line_end":1461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188036,"byte_end":188039,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188044,"byte_end":188090,"line_start":1463,"line_end":1463,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188095,"byte_end":188168,"line_start":1464,"line_end":1464,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188173,"byte_end":188250,"line_start":1465,"line_end":1465,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":188541,"byte_end":188547,"line_start":1475,"line_end":1475,"column_start":12,"column_end":18},"name":"finish","qualname":"<StreamWriter>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218282,"byte_end":218290,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::filter::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218300,"byte_end":218303,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Sub","qualname":"::filter::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218313,"byte_end":218315,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Up","qualname":"::filter::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218325,"byte_end":218328,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Avg","qualname":"::filter::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218338,"byte_end":218343,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::filter::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218265,"byte_end":218275,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::filter::FilterType","value":"pub enum FilterType { NoFilter = , Sub = , Up = , Avg = , Paeth = , }","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1821}],"decl_id":null,"docs":" The byte level filter applied to scanlines to prepare them for compression.","sig":null,"attributes":[{"value":"/ The byte level filter applied to scanlines to prepare them for compression.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":217853,"byte_end":217932,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":217933,"byte_end":217936,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Compression in general benefits from repetitive data. The filter is a content-aware method of","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":217937,"byte_end":218034,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ compressing the range of occurring byte values to help the compression algorithm. Note that","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218035,"byte_end":218130,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ this does not operate on pixels but on raw bytes of a scanline.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218131,"byte_end":218198,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218244,"byte_end":218255,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218547,"byte_end":218554,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<FilterType>::from_u8","value":"pub fn from_u8(u8) -> Option<FilterType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218464,"byte_end":218535,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219254,"byte_end":219262,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::filter::AdaptiveFilterType::Adaptive","value":"AdaptiveFilterType::Adaptive","parent":{"krate":0,"index":1835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219268,"byte_end":219279,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"NonAdaptive","qualname":"::filter::AdaptiveFilterType::NonAdaptive","value":"AdaptiveFilterType::NonAdaptive","parent":{"krate":0,"index":1835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219229,"byte_end":219247,"line_start":46,"line_end":46,"column_start":10,"column_end":28},"name":"AdaptiveFilterType","qualname":"::filter::AdaptiveFilterType","value":"pub enum AdaptiveFilterType { Adaptive, NonAdaptive, }","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1838}],"decl_id":null,"docs":" The filtering method for preprocessing scanline data before compression.","sig":null,"attributes":[{"value":"/ The filtering method for preprocessing scanline data before compression.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218852,"byte_end":218928,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218929,"byte_end":218932,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Adaptive filtering performs additional computation in an attempt to maximize","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218933,"byte_end":219013,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ the compression of the data. [`NonAdaptive`] filtering is the default.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219014,"byte_end":219088,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219089,"byte_end":219092,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`NonAdaptive`]: enum.AdaptiveFilterType.html#variant.NonAdaptive","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219093,"byte_end":219162,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"repr(u8)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219208,"byte_end":219219,"line_start":45,"line_end":45,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":902},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_metadata","qualname":"::text_metadata","value":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":1857},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":938},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":958},{"krate":0,"index":970},{"krate":0,"index":1937},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":975},{"krate":0,"index":991}],"decl_id":null,"docs":" # Text chunks (tEXt/zTXt/iTXt) structs and functions","sig":null,"attributes":[{"value":"/ # Text chunks (tEXt/zTXt/iTXt) structs and functions","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231583,"byte_end":231639,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231640,"byte_end":231643,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [PNG spec](https://www.w3.org/TR/2003/REC-PNG-20031110/#11textinfo) optionally allows for","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231644,"byte_end":231741,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ embedded text chunks in the file. They may appear either before or after the image data","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231742,"byte_end":231833,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ chunks. There are three kinds of text chunks.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231834,"byte_end":231883,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/  -   `tEXt`: This has a `keyword` and `text` field, and is ISO 8859-1 encoded.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231884,"byte_end":231966,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/  -   `zTXt`: This is semantically the same as `tEXt`, i.e. it has the same fields and","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":231967,"byte_end":232056,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/       encoding, but the `text` field is compressed before being written into the PNG file.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232057,"byte_end":232151,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/  -   `iTXt`: This chunk allows for its `text` field to be any valid UTF-8, and supports","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232152,"byte_end":232243,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/        compression of the text field as well.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232244,"byte_end":232293,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232294,"byte_end":232297,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/  The `ISO 8859-1` encoding technically doesn't allow any control characters","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232298,"byte_end":232377,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/  to be used, but in practice these values are encountered anyway. This can","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232378,"byte_end":232456,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/  either be the extended `ISO-8859-1` encoding with control characters or the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232457,"byte_end":232537,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/  `Windows-1252` encoding. This crate assumes the `ISO-8859-1` encoding is","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232538,"byte_end":232615,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/  used.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232616,"byte_end":232626,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232627,"byte_end":232630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/  ## Reading text chunks","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232631,"byte_end":232658,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232659,"byte_end":232662,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/  As a PNG is decoded, any text chunk encountered is appended the","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232663,"byte_end":232731,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/  [`Info`](`crate::common::Info`) struct, in the `uncompressed_latin1_text`,","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232732,"byte_end":232811,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/  `compressed_latin1_text`, and the `utf8_text` fields depending on whether the encountered","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232812,"byte_end":232906,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/  chunk is `tEXt`, `zTXt`, or `iTXt`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232907,"byte_end":232947,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232948,"byte_end":232951,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232952,"byte_end":232960,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/  use std::fs::File;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232961,"byte_end":232984,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/  use std::iter::FromIterator;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":232985,"byte_end":233018,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/  use std::path::PathBuf;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233019,"byte_end":233047,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233048,"byte_end":233051,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/  // Opening a png file that has a zTXt chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233052,"byte_end":233100,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/  let decoder = png::Decoder::new(","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233101,"byte_end":233138,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/      File::open(PathBuf::from_iter([","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233139,"byte_end":233179,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/          \"tests\",","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233180,"byte_end":233201,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/          \"text_chunk_examples\",","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233202,"byte_end":233237,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/          \"ztxt_example.png\",","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233238,"byte_end":233270,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/      ]))","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233271,"byte_end":233283,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/      .unwrap(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233284,"byte_end":233303,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/  );","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233304,"byte_end":233311,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/  let mut reader = decoder.read_info().unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233312,"byte_end":233363,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/  // If the text chunk is before the image data frames, `reader.info()` already contains the text.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233364,"byte_end":233465,"line_start":40,"line_end":40,"column_start":1,"column_end":102}},{"value":"/  for text_chunk in &reader.info().compressed_latin1_text {","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233466,"byte_end":233528,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/      println!(\"{:?}\", text_chunk.keyword); // Prints the keyword","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233529,"byte_end":233597,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/      println!(\"{:#?}\", text_chunk); // Prints out the text chunk.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233598,"byte_end":233667,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/      // To get the uncompressed text, use the `get_text` method.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233668,"byte_end":233736,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/      println!(\"{}\", text_chunk.get_text().unwrap());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233737,"byte_end":233793,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/  }","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233794,"byte_end":233800,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/  ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233801,"byte_end":233809,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233810,"byte_end":233813,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/  ## Writing text chunks","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233814,"byte_end":233841,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233842,"byte_end":233845,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/  There are two ways to write text chunks: the first is to add the appropriate text structs directly to the encoder header before the header is written to file.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":233846,"byte_end":234009,"line_start":51,"line_end":51,"column_start":1,"column_end":164}},{"value":"/  To add a text chunk at any point in the stream, use the `write_text_chunk` method.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234010,"byte_end":234097,"line_start":52,"line_end":52,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234098,"byte_end":234101,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234102,"byte_end":234110,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/  # use png::text_metadata::{ITXtChunk, ZTXtChunk};","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234111,"byte_end":234165,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/  # use std::env;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234166,"byte_end":234186,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/  # use std::fs::File;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234187,"byte_end":234212,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/  # use std::io::BufWriter;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234213,"byte_end":234243,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/  # use std::iter::FromIterator;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234244,"byte_end":234279,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/  # use std::path::PathBuf;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234280,"byte_end":234310,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/  # let file = File::create(PathBuf::from_iter([\"target\", \"text_chunk.png\"])).unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234311,"byte_end":234401,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/  # let ref mut w = BufWriter::new(file);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234402,"byte_end":234446,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/  let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234447,"byte_end":234535,"line_start":63,"line_end":63,"column_start":1,"column_end":89}},{"value":"/  encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234536,"byte_end":234581,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/  encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234582,"byte_end":234627,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/  // Adding text chunks to the header","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234628,"byte_end":234668,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/  encoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234669,"byte_end":234681,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"/     .add_text_chunk(","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234682,"byte_end":234706,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/         \"Testing tEXt\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234707,"byte_end":234746,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         \"This is a tEXt chunk that will appear before the IDAT chunks.\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234747,"byte_end":234835,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/     )","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234836,"byte_end":234845,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/     .unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234846,"byte_end":234864,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/  encoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234865,"byte_end":234877,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/      .add_ztxt_chunk(","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234878,"byte_end":234903,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/          \"Testing zTXt\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234904,"byte_end":234944,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/          \"This is a zTXt chunk that is compressed in the png file.\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":234945,"byte_end":235029,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/      )","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235030,"byte_end":235040,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235041,"byte_end":235060,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/  encoder","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235061,"byte_end":235073,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/      .add_itxt_chunk(","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235074,"byte_end":235099,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/          \"Testing iTXt\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235100,"byte_end":235140,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/          \"iTXt chunks support all of UTF8. Example: हिंदी.\".to_string(),","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235141,"byte_end":235227,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/      )","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235228,"byte_end":235238,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235239,"byte_end":235258,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235259,"byte_end":235262,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  let mut writer = encoder.write_header().unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235263,"byte_end":235317,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235318,"byte_end":235321,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/  let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235322,"byte_end":235455,"line_start":88,"line_end":88,"column_start":1,"column_end":134}},{"value":"/  writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235456,"byte_end":235509,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235510,"byte_end":235513,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/  // We can add a tEXt/zTXt/iTXt at any point before the encoder is dropped from scope. These chunks will be at the end of the png file.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235514,"byte_end":235653,"line_start":91,"line_end":91,"column_start":1,"column_end":140}},{"value":"/  let tail_ztxt_chunk = ZTXtChunk::new(\"Comment\".to_string(), \"A zTXt chunk after the image data.\".to_string());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235654,"byte_end":235769,"line_start":92,"line_end":92,"column_start":1,"column_end":116}},{"value":"/  writer.write_text_chunk(&tail_ztxt_chunk).unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235770,"byte_end":235826,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235827,"byte_end":235830,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/  // The fields of the text chunk are public, so they can be mutated before being written to the file.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235831,"byte_end":235936,"line_start":95,"line_end":95,"column_start":1,"column_end":106}},{"value":"/  let mut tail_itxt_chunk = ITXtChunk::new(\"Author\".to_string(), \"सायंतन खान\".to_string());","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":235937,"byte_end":236049,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/  tail_itxt_chunk.compressed = true;","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236050,"byte_end":236089,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/  tail_itxt_chunk.language_tag = \"hi\".to_string();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236090,"byte_end":236143,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/  tail_itxt_chunk.translated_keyword = \"लेखक\".to_string();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236144,"byte_end":236213,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/  writer.write_text_chunk(&tail_itxt_chunk).unwrap();","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236214,"byte_end":236270,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/  ```","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236271,"byte_end":236279,"line_start":101,"line_end":101,"column_start":1,"column_end":9}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236281,"byte_end":236303,"line_start":103,"line_end":103,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":937},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236610,"byte_end":236629,"line_start":111,"line_end":111,"column_start":11,"column_end":30},"name":"DECOMPRESSION_LIMIT","qualname":"::text_metadata::DECOMPRESSION_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default decompression limit for compressed text chunks.\n","sig":null,"attributes":[{"value":"/ Default decompression limit for compressed text chunks.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":236540,"byte_end":236599,"line_start":110,"line_end":110,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":938},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":237788,"byte_end":237806,"line_start":146,"line_end":146,"column_start":11,"column_end":29},"name":"EncodableTextChunk","qualname":"::text_metadata::EncodableTextChunk","value":"EncodableTextChunk","parent":null,"children":[{"krate":0,"index":939}],"decl_id":null,"docs":" A generalized text chunk trait\n","sig":null,"attributes":[{"value":"/ A generalized text chunk trait","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":237743,"byte_end":237777,"line_start":145,"line_end":145,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":237866,"byte_end":237872,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"encode","qualname":"::text_metadata::EncodableTextChunk::encode","value":"pub fn encode<W: Write>(&Self, &mut W) -> Result<(), EncodingError>","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Encode text chunk as Vec<u8> to a `Write`\n","sig":null,"attributes":[{"value":"/ Encode text chunk as Vec<u8> to a `Write`","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":237813,"byte_end":237858,"line_start":147,"line_end":147,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":238021,"byte_end":238030,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"TEXtChunk","qualname":"::text_metadata::TEXtChunk","value":"TEXtChunk { keyword, text }","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"decl_id":null,"docs":" Struct representing a tEXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a tEXt chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":237934,"byte_end":237970,"line_start":151,"line_end":151,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":238138,"byte_end":238145,"line_start":155,"line_end":155,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::TEXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":238037,"byte_end":238129,"line_start":154,"line_end":154,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":238217,"byte_end":238221,"line_start":157,"line_end":157,"column_start":9,"column_end":13},"name":"text","qualname":"::text_metadata::TEXtChunk::text","value":"std::string::String","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" Text field of tEXt chunk. Can be at most 2GB.\n","sig":null,"attributes":[{"value":"/ Text field of tEXt chunk. Can be at most 2GB.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":238159,"byte_end":238208,"line_start":156,"line_end":156,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":239244,"byte_end":239247,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<TEXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TEXtChunk.\n Not sure whether it should take &str or String.\n","sig":null,"attributes":[{"value":"/ Constructs a new TEXtChunk.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":239145,"byte_end":239176,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ Not sure whether it should take &str or String.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":239181,"byte_end":239232,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240609,"byte_end":240618,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"ZTXtChunk","qualname":"::text_metadata::ZTXtChunk","value":"ZTXtChunk { keyword }","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"decl_id":null,"docs":" Struct representing a zTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a zTXt chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240522,"byte_end":240558,"line_start":234,"line_end":234,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240726,"byte_end":240733,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ZTXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240625,"byte_end":240717,"line_start":237,"line_end":237,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":241233,"byte_end":241236,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<ZTXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ZTXt chunk.\n","sig":null,"attributes":[{"value":"/ Creates a new ZTXt chunk.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":241192,"byte_end":241221,"line_start":253,"line_end":253,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":242142,"byte_end":242157,"line_start":281,"line_end":281,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ZTXtChunk>::decompress_text","value":"pub fn decompress_text(&mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":242005,"byte_end":242130,"line_start":280,"line_end":280,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":242395,"byte_end":242421,"line_start":286,"line_end":286,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ZTXtChunk>::decompress_text_with_limit","value":"pub fn decompress_text_with_limit(&mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":242272,"byte_end":242383,"line_start":285,"line_end":285,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":243471,"byte_end":243479,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ZTXtChunk>::get_text","value":"pub fn get_text(&Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression uses more the 2MiB, first call decompress with limit, and then this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":243296,"byte_end":243358,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ If decompression uses more the 2MiB, first call decompress with limit, and then this method.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":243363,"byte_end":243459,"line_start":308,"line_end":308,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":243975,"byte_end":243988,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ZTXtChunk>::compress_text","value":"pub fn compress_text(&mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":243909,"byte_end":243963,"line_start":320,"line_end":320,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246072,"byte_end":246081,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"ITXtChunk","qualname":"::text_metadata::ITXtChunk","value":"ITXtChunk { keyword, compressed, language_tag, translated_keyword }","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"decl_id":null,"docs":" Struct encoding an iTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct encoding an iTXt chunk","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":245988,"byte_end":246021,"line_start":377,"line_end":377,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246180,"byte_end":246187,"line_start":381,"line_end":381,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ITXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246088,"byte_end":246171,"line_start":380,"line_end":380,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246280,"byte_end":246290,"line_start":383,"line_end":383,"column_start":9,"column_end":19},"name":"compressed","qualname":"::text_metadata::ITXtChunk::compressed","value":"bool","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Indicates whether the text will be (or was) compressed in the PNG.\n","sig":null,"attributes":[{"value":"/ Indicates whether the text will be (or was) compressed in the PNG.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246201,"byte_end":246271,"line_start":382,"line_end":382,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246411,"byte_end":246423,"line_start":385,"line_end":385,"column_start":9,"column_end":21},"name":"language_tag","qualname":"::text_metadata::ITXtChunk::language_tag","value":"std::string::String","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.\n","sig":null,"attributes":[{"value":"/ A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246302,"byte_end":246402,"line_start":384,"line_end":384,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246492,"byte_end":246510,"line_start":387,"line_end":387,"column_start":9,"column_end":27},"name":"translated_keyword","qualname":"::text_metadata::ITXtChunk::translated_keyword","value":"std::string::String","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Translated keyword. This is UTF-8 encoded.\n","sig":null,"attributes":[{"value":"/ Translated keyword. This is UTF-8 encoded.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246437,"byte_end":246483,"line_start":386,"line_end":386,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246765,"byte_end":246768,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<ITXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new iTXt chunk. Leaves all but keyword and text to default values.\n","sig":null,"attributes":[{"value":"/ Constructs a new iTXt chunk. Leaves all but keyword and text to default values.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246670,"byte_end":246753,"line_start":393,"line_end":393,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":248697,"byte_end":248712,"line_start":451,"line_end":451,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ITXtChunk>::decompress_text","value":"pub fn decompress_text(&mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":248560,"byte_end":248685,"line_start":450,"line_end":450,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":248950,"byte_end":248976,"line_start":456,"line_end":456,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ITXtChunk>::decompress_text_with_limit","value":"pub fn decompress_text_with_limit(&mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":248827,"byte_end":248938,"line_start":455,"line_end":455,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":250143,"byte_end":250151,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ITXtChunk>::get_text","value":"pub fn get_text(&Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":249963,"byte_end":250025,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":250030,"byte_end":250131,"line_start":481,"line_end":481,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":250718,"byte_end":250731,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ITXtChunk>::compress_text","value":"pub fn compress_text(&mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":250652,"byte_end":250706,"line_start":494,"line_end":494,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5208,"byte_end":5217,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5343,"byte_end":5352,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6614,"byte_end":6623,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9427,"byte_end":9435,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10302,"byte_end":10306,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10926,"byte_end":10935,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11307,"byte_end":11316,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11917,"byte_end":11924,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12242,"byte_end":12249,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13280,"byte_end":13292,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13637,"byte_end":13649,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14795,"byte_end":14811,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15760,"byte_end":15771,"line_start":327,"line_end":327,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17619,"byte_end":17639,"line_start":388,"line_end":388,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":1315},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20144,"byte_end":20163,"line_start":441,"line_end":441,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22178,"byte_end":22182,"line_start":497,"line_end":497,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23022,"byte_end":23026,"line_start":524,"line_end":524,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":28141,"byte_end":28154,"line_start":663,"line_end":663,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30286,"byte_end":30301,"line_start":717,"line_end":717,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30714,"byte_end":30729,"line_start":728,"line_end":728,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":31958,"byte_end":31972,"line_start":756,"line_end":756,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":32088,"byte_end":32102,"line_start":762,"line_end":762,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73239,"byte_end":73252,"line_start":213,"line_end":213,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73457,"byte_end":73470,"line_start":222,"line_end":222,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73871,"byte_end":73882,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80000,"byte_end":80013,"line_start":351,"line_end":351,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80135,"byte_end":80148,"line_start":357,"line_end":357,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80276,"byte_end":80287,"line_start":363,"line_end":363,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80409,"byte_end":80414,"line_start":369,"line_end":369,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80658,"byte_end":80671,"line_start":378,"line_end":378,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81720,"byte_end":81736,"line_start":416,"line_end":416,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":113795,"byte_end":113799,"line_start":1270,"line_end":1270,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":114474,"byte_end":114490,"line_start":1288,"line_end":1288,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":114566,"byte_end":114576,"line_start":1294,"line_end":1294,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/zlib.rs","byte_start":128309,"byte_end":128319,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33615,"byte_end":33625,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34147,"byte_end":34153,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34660,"byte_end":34673,"line_start":87,"line_end":87,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35634,"byte_end":35637,"line_start":122,"line_end":122,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35728,"byte_end":35735,"line_start":128,"line_end":128,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":38263,"byte_end":38274,"line_start":198,"line_end":198,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":42265,"byte_end":42271,"line_start":319,"line_end":319,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":61216,"byte_end":61228,"line_start":801,"line_end":801,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135523,"byte_end":135536,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135741,"byte_end":135754,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":136163,"byte_end":136174,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138040,"byte_end":138053,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138181,"byte_end":138186,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138355,"byte_end":138366,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138492,"byte_end":138505,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139328,"byte_end":139335,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":152846,"byte_end":152857,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":154535,"byte_end":154541,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171432,"byte_end":171438,"line_start":986,"line_end":986,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171720,"byte_end":171731,"line_start":1000,"line_end":1000,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171985,"byte_end":171996,"line_start":1011,"line_end":1011,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":173057,"byte_end":173068,"line_start":1042,"line_end":1042,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":176413,"byte_end":176424,"line_start":1146,"line_end":1146,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":177780,"byte_end":177791,"line_start":1187,"line_end":1187,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":178913,"byte_end":178920,"line_start":1218,"line_end":1218,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":180133,"byte_end":180145,"line_start":1257,"line_end":1257,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":190401,"byte_end":190413,"line_start":1531,"line_end":1531,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":193067,"byte_end":193079,"line_start":1608,"line_end":1608,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":217342,"byte_end":217353,"line_start":2291,"line_end":2291,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218369,"byte_end":218379,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218447,"byte_end":218457,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219301,"byte_end":219319,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":239129,"byte_end":239138,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240013,"byte_end":240022,"line_start":217,"line_end":217,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":241176,"byte_end":241185,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":244775,"byte_end":244784,"line_start":342,"line_end":342,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246654,"byte_end":246663,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":251508,"byte_end":251517,"line_start":516,"line_end":516,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/utils.rs","byte_start":258105,"byte_end":258118,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/utils.rs","byte_start":259267,"byte_end":259280,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2632,"byte_end":2637,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/lib.rs","byte_start":2707,"byte_end":2720,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":902}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5208,"byte_end":5217,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/chunk.rs","byte_start":5343,"byte_end":5352,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":6614,"byte_end":6623,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":9427,"byte_end":9435,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10302,"byte_end":10306,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":10926,"byte_end":10935,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11307,"byte_end":11316,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":11917,"byte_end":11924,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":12242,"byte_end":12249,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13280,"byte_end":13292,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":13637,"byte_end":13649,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":14795,"byte_end":14811,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":15760,"byte_end":15771,"line_start":327,"line_end":327,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":17619,"byte_end":17639,"line_start":388,"line_end":388,"column_start":6,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":20144,"byte_end":20163,"line_start":441,"line_end":441,"column_start":6,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":22178,"byte_end":22182,"line_start":497,"line_end":497,"column_start":18,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1341},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":23022,"byte_end":23026,"line_start":524,"line_end":524,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":28141,"byte_end":28154,"line_start":663,"line_end":663,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30286,"byte_end":30301,"line_start":717,"line_end":717,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":30714,"byte_end":30729,"line_start":728,"line_end":728,"column_start":18,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":31958,"byte_end":31972,"line_start":756,"line_end":756,"column_start":35,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/common.rs","byte_start":32088,"byte_end":32102,"line_start":762,"line_end":762,"column_start":23,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73239,"byte_end":73252,"line_start":213,"line_end":213,"column_start":23,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1559},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73457,"byte_end":73470,"line_start":222,"line_end":222,"column_start":23,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":73871,"byte_end":73882,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80000,"byte_end":80013,"line_start":351,"line_end":351,"column_start":26,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80135,"byte_end":80148,"line_start":357,"line_end":357,"column_start":28,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80276,"byte_end":80287,"line_start":363,"line_end":363,"column_start":33,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80409,"byte_end":80414,"line_start":369,"line_end":369,"column_start":34,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":3803},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":80658,"byte_end":80671,"line_start":378,"line_end":378,"column_start":34,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":81720,"byte_end":81736,"line_start":416,"line_end":416,"column_start":6,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":113795,"byte_end":113799,"line_start":1270,"line_end":1270,"column_start":6,"column_end":10},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":114474,"byte_end":114490,"line_start":1288,"line_end":1288,"column_start":18,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/stream.rs","byte_start":114566,"byte_end":114576,"line_start":1294,"line_end":1294,"column_start":18,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/zlib.rs","byte_start":128309,"byte_end":128319,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":33615,"byte_end":33625,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34147,"byte_end":34153,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":34660,"byte_end":34673,"line_start":87,"line_end":87,"column_start":13,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35634,"byte_end":35637,"line_start":122,"line_end":122,"column_start":13,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":35728,"byte_end":35735,"line_start":128,"line_end":128,"column_start":15,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":38263,"byte_end":38274,"line_start":198,"line_end":198,"column_start":15,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":42265,"byte_end":42271,"line_start":319,"line_end":319,"column_start":15,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/decoder/mod.rs","byte_start":61216,"byte_end":61228,"line_start":801,"line_end":801,"column_start":6,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135523,"byte_end":135536,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1749},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":135741,"byte_end":135754,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1749},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":136163,"byte_end":136174,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138040,"byte_end":138053,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1749},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138181,"byte_end":138186,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":3803},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138355,"byte_end":138366,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":138492,"byte_end":138505,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1749},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":139328,"byte_end":139335,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":152846,"byte_end":152857,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":154535,"byte_end":154541,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171432,"byte_end":171438,"line_start":986,"line_end":986,"column_start":25,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171720,"byte_end":171731,"line_start":1000,"line_end":1000,"column_start":30,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":771},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":171985,"byte_end":171996,"line_start":1011,"line_end":1011,"column_start":33,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":771},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":173057,"byte_end":173068,"line_start":1042,"line_end":1042,"column_start":20,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":176413,"byte_end":176424,"line_start":1146,"line_end":1146,"column_start":30,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":4403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":177780,"byte_end":177791,"line_start":1187,"line_end":1187,"column_start":25,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":178913,"byte_end":178920,"line_start":1218,"line_end":1218,"column_start":20,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":180133,"byte_end":180145,"line_start":1257,"line_end":1257,"column_start":20,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":190401,"byte_end":190413,"line_start":1531,"line_end":1531,"column_start":30,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":830},"to":{"krate":1,"index":4403}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":193067,"byte_end":193079,"line_start":1608,"line_end":1608,"column_start":25,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/encoder.rs","byte_start":217342,"byte_end":217353,"line_start":2291,"line_end":2291,"column_start":6,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218369,"byte_end":218379,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":218447,"byte_end":218457,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/filter.rs","byte_start":219301,"byte_end":219319,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1835},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":239129,"byte_end":239138,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":240013,"byte_end":240022,"line_start":217,"line_end":217,"column_start":29,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1891},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":241176,"byte_end":241185,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":244775,"byte_end":244784,"line_start":342,"line_end":342,"column_start":29,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1905},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":246654,"byte_end":246663,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/text_metadata.rs","byte_start":251508,"byte_end":251517,"line_start":516,"line_end":516,"column_start":29,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1937},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/traits.rs","byte_start":254594,"byte_end":254598,"line_start":28,"line_end":28,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":4343},"to":{"krate":0,"index":1003}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/traits.rs","byte_start":254792,"byte_end":254797,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":4403},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/utils.rs","byte_start":258105,"byte_end":258118,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/katianawieser/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.17.3/src/utils.rs","byte_start":259267,"byte_end":259280,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":7646}}]}